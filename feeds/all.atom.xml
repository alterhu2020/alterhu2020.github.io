<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PingBook Blog</title><link href="https://pingbook.top/" rel="alternate"></link><link href="https://pingbook.top/feeds/all.atom.xml" rel="self"></link><id>https://pingbook.top/</id><updated>2018-07-11T23:39:35+08:00</updated><entry><title>[高级] pelican 博客高级配置</title><link href="https://pingbook.top/articles/pelican-advance/" rel="alternate"></link><published>2018-07-11T23:39:35+08:00</published><updated>2018-07-11T23:39:35+08:00</updated><author><name>Walter Hu</name></author><id>tag:pingbook.top,2018-07-11:/articles/pelican-advance/</id><summary type="html">&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;继续上一篇的基本配置后,这里我将涉及到一些高级的使用,也是自己摸索的一些网上的经验,还有一些自己自定义的功能.&lt;/p&gt;
&lt;h2&gt;添加google和百度的SEO&amp;nbsp;(2018-07-09)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;谷歌的收录比较简单,直接登录到这里: &lt;a href="https://www.google.com/webmasters"&gt;https://www.google.com/webmasters&lt;/a&gt;&amp;nbsp;,安装提示添加自己的网站即可&lt;/li&gt;
&lt;li&gt;百度的可以通过进入百度站长&lt;a href="http://zhanzhang.baidu.com"&gt;http://zhanzhang.baidu.com&lt;/a&gt;,方法同上面的谷歌添加网站,验证即可.&lt;/li&gt;
&lt;li&gt;加入谷歌广告:&lt;a href="https://www.google.com/adsense/new/u/0/pub-1893384651266286/home"&gt;https://www.google.com/adsense/new/u/0/pub-1893384651266286/home&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;增加搜索功能(2018-07-09)&lt;/h2&gt;
&lt;p&gt;使用的插件是: &lt;a href=""&gt;Tipue_Search&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;windows下的运行&lt;/h3&gt;
&lt;p&gt;看了一下官方的自动化部署相关的文章&lt;a href="http://docs.getpelican.com/en/stable/publish.html"&gt;fabric/Make&lt;/a&gt;, 提到在linux下
你可以很方便的使用make 命令来操作相关的自动化,它对应的是&lt;code&gt;makefile&lt;/code&gt;,你在使用&lt;code&gt;pelican-quickstart&lt;/code&gt;命令的时候会提示你生成了
这个文件 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;继续上一篇的基本配置后,这里我将涉及到一些高级的使用,也是自己摸索的一些网上的经验,还有一些自己自定义的功能.&lt;/p&gt;
&lt;h2&gt;添加google和百度的SEO&amp;nbsp;(2018-07-09)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;谷歌的收录比较简单,直接登录到这里: &lt;a href="https://www.google.com/webmasters"&gt;https://www.google.com/webmasters&lt;/a&gt;&amp;nbsp;,安装提示添加自己的网站即可&lt;/li&gt;
&lt;li&gt;百度的可以通过进入百度站长&lt;a href="http://zhanzhang.baidu.com"&gt;http://zhanzhang.baidu.com&lt;/a&gt;,方法同上面的谷歌添加网站,验证即可.&lt;/li&gt;
&lt;li&gt;加入谷歌广告:&lt;a href="https://www.google.com/adsense/new/u/0/pub-1893384651266286/home"&gt;https://www.google.com/adsense/new/u/0/pub-1893384651266286/home&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;增加搜索功能(2018-07-09)&lt;/h2&gt;
&lt;p&gt;使用的插件是: &lt;a href=""&gt;Tipue_Search&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;windows下的运行&lt;/h3&gt;
&lt;p&gt;看了一下官方的自动化部署相关的文章&lt;a href="http://docs.getpelican.com/en/stable/publish.html"&gt;fabric/Make&lt;/a&gt;, 提到在linux下
你可以很方便的使用make 命令来操作相关的自动化,它对应的是&lt;code&gt;makefile&lt;/code&gt;,你在使用&lt;code&gt;pelican-quickstart&lt;/code&gt;命令的时候会提示你生成了
这个文件.&lt;br&gt;
&lt;code&gt;fabfile&lt;/code&gt;在上面的命令生成后发现里面的文件报了好多错,&lt;code&gt;from fabric.api import *&lt;/code&gt;,类似&lt;code&gt;no module found env,local&lt;/code&gt;
解决方法很简单,执行下面的命令进行安装相关的依赖包就好了:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;pip install pycryptodome&lt;/span&gt;
&lt;span class="code-line"&gt;pip install Fabric3 # 注意这里是Fabric3,不要使用fabric&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;百度站长不能收录&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;很遗憾,还没有找到好的方法,网上说的一些方法,比如DNSPod设置,nginx代理(不符合要求),CDN代理(没有尝试过).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;加入浏览量统计&lt;/h2&gt;
&lt;p&gt;在谷歌上溜达了一圈,找到了一个博客: http://xiaohanyu.me/about/,随便看了一下作者的博客,看到了他去面试的谷歌和Facebook的面试经历,
感觉挺好玩的,里面提到了他们代码面试的工具: &lt;a href="https://coderpad.io"&gt;https://coderpad.io&lt;/a&gt;. 去玩了一下,感觉挺好玩.
后面发现这个是最好做浏览量统计的.&lt;br&gt;
* 工具&lt;a href="http://busuanzi.ibruce.info/"&gt;不蒜子&lt;/a&gt;,代码也是超简单:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="err"&gt;async&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;busuanzi_container_site_pv&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;总访问量&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;busuanzi_value_site_pv&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;次&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;busuanzi_container_site_uv&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;总访客&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;busuanzi_value_site_uv&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;人&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;busuanzi_container_page_pv&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;, 浏览量:&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;busuanzi_value_page_pv&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="pelican"></category></entry><entry><title>[面试] 1. 面向对象的相关概念</title><link href="https://pingbook.top/articles/1-object-oriented-programming/" rel="alternate"></link><published>2018-07-11T16:15:48+08:00</published><updated>2018-07-11T16:15:48+08:00</updated><author><name>Walter Hu</name></author><id>tag:pingbook.top,2018-07-11:/articles/1-object-oriented-programming/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;这里整理的是针对面向对象的相关问题和面试中可能涉及的问题.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;达到的目的&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;面向对象三大特性,封装 (Encapsulation) ,　继承 (Inheritance) 和多态&amp;nbsp;(Polymorphism) &lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;这里整理的是针对面向对象的相关问题和面试中可能涉及的问题.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;达到的目的&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;面向对象三大特性,封装 (Encapsulation) ,　继承 (Inheritance) 和多态&amp;nbsp;(Polymorphism) &lt;/li&gt;
&lt;/ul&gt;</content><category term="面向对象"></category><category term="面试"></category><category term="java"></category></entry><entry><title>[面试] 2. 有关list及其方法的使用</title><link href="https://pingbook.top/articles/2-list-methods/" rel="alternate"></link><published>2018-07-11T16:15:15+08:00</published><updated>2018-07-11T16:15:15+08:00</updated><author><name>Walter Hu</name></author><id>tag:pingbook.top,2018-07-11:/articles/2-list-methods/</id><summary type="html">&lt;h2&gt;解决的问题(Python/Java的list对比学习)&lt;/h2&gt;
&lt;h3&gt;排序&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;java采用的是&lt;code&gt;Collections&lt;/code&gt;包中的两个方法: &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;Collections.sort(list)   更复杂点可以是Collection.sort(list, new Comparator&amp;lt;Person&amp;gt;() {})&lt;/span&gt;
&lt;span class="code-line"&gt;Collections.reverse(list)&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;or&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;list.sort(Collections.reverseOrder())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;python没有array,只有list,直接使用&lt;code&gt;sort&lt;/code&gt;方法即可,如果是倒序可以用reverse=True指定&lt;/li&gt;
&lt;/ol&gt;</summary><content type="html">&lt;h2&gt;解决的问题(Python/Java的list对比学习)&lt;/h2&gt;
&lt;h3&gt;排序&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;java采用的是&lt;code&gt;Collections&lt;/code&gt;包中的两个方法: &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;Collections.sort(list)   更复杂点可以是Collection.sort(list, new Comparator&amp;lt;Person&amp;gt;() {})&lt;/span&gt;
&lt;span class="code-line"&gt;Collections.reverse(list)&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;or&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;list.sort(Collections.reverseOrder())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;python没有array,只有list,直接使用&lt;code&gt;sort&lt;/code&gt;方法即可,如果是倒序可以用reverse=True指定&lt;/li&gt;
&lt;/ol&gt;</content><category term="面试"></category><category term="list"></category><category term="java"></category></entry><entry><title>[整理] 一些常用的linux系统的操作命令</title><link href="https://pingbook.top/articles/basic-command/" rel="alternate"></link><published>2018-07-11T16:13:50+08:00</published><updated>2018-07-11T16:13:50+08:00</updated><author><name>Walter Hu</name></author><id>tag:pingbook.top,2018-07-11:/articles/basic-command/</id><summary type="html">&lt;h2&gt;常用命令&lt;/h2&gt;
&lt;h3&gt;性能相关的命令&lt;/h3&gt;</summary><content type="html">&lt;h2&gt;常用命令&lt;/h2&gt;
&lt;h3&gt;性能相关的命令&lt;/h3&gt;</content><category term="linux"></category></entry><entry><title>大数据hadoop,spark,hbase,hive概念</title><link href="https://pingbook.top/articles/hadoop-spark-hbase-hive/" rel="alternate"></link><published>2018-07-11T16:11:13+08:00</published><updated>2018-07-11T16:11:13+08:00</updated><author><name>Walter Hu</name></author><id>tag:pingbook.top,2018-07-11:/articles/hadoop-spark-hbase-hive/</id><summary type="html">&lt;h2&gt;Hadoop、Spark、HBase、Hive&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;到处都在谈论大数据,感觉自己再不去学习这些最新的技术,自己就要被淘汰了.好吧我也开始学习了.&lt;/p&gt;
&lt;/blockquote&gt;</summary><content type="html">&lt;h2&gt;Hadoop、Spark、HBase、Hive&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;到处都在谈论大数据,感觉自己再不去学习这些最新的技术,自己就要被淘汰了.好吧我也开始学习了.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="bigdata"></category><category term="hadoop"></category></entry><entry><title>树莓派3B安装</title><link href="https://pingbook.top/articles/pi-installation/" rel="alternate"></link><published>2018-07-11T16:05:26+08:00</published><updated>2018-07-11T16:05:26+08:00</updated><author><name>Walter Hu</name></author><id>tag:pingbook.top,2018-07-11:/articles/pi-installation/</id><summary type="html">&lt;h2&gt;树莓派安装&lt;/h2&gt;
&lt;p&gt;安装完成后，TF卡被分成两个分区：&lt;br&gt;
1. &lt;span class="caps"&gt;67MB&lt;/span&gt; vfat格式的引导分区（系统启动后被挂载在/boot目录）
2. TF卡剩余空间&amp;nbsp;ext4格式的磁盘分区&lt;/p&gt;
&lt;p&gt;由于Windows下不识别ext4格式的磁盘，在资源管理器中查看TF卡只显示一个67MB大小、名字为boot的盘符。
若想恢复TF卡整个空间为windows可识别的fat32/exfat格式，需要使用低级格式化工具HDD Low Level Format&amp;nbsp;Tool（windows磁盘管理器无法处理ext4格式磁盘）。&lt;/p&gt;
&lt;h2&gt;安装的是Destop版本,lite&lt;/h2&gt;
&lt;h2&gt;远程桌面工具,不是VNC&lt;/h2&gt;
&lt;p&gt;直接运行如下命令安装对应的远程桌面工具:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt install -y xrdp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;树莓派安装&lt;/h2&gt;
&lt;p&gt;安装完成后，TF卡被分成两个分区：&lt;br&gt;
1. &lt;span class="caps"&gt;67MB&lt;/span&gt; vfat格式的引导分区（系统启动后被挂载在/boot目录）
2. TF卡剩余空间&amp;nbsp;ext4格式的磁盘分区&lt;/p&gt;
&lt;p&gt;由于Windows下不识别ext4格式的磁盘，在资源管理器中查看TF卡只显示一个67MB大小、名字为boot的盘符。
若想恢复TF卡整个空间为windows可识别的fat32/exfat格式，需要使用低级格式化工具HDD Low Level Format&amp;nbsp;Tool（windows磁盘管理器无法处理ext4格式磁盘）。&lt;/p&gt;
&lt;h2&gt;安装的是Destop版本,lite&lt;/h2&gt;
&lt;h2&gt;远程桌面工具,不是VNC&lt;/h2&gt;
&lt;p&gt;直接运行如下命令安装对应的远程桌面工具:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt install -y xrdp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="树莓派"></category></entry><entry><title>[面试] 1. 黑盒测试需要注意的几个关注点</title><link href="https://pingbook.top/articles/3-software-testing-black/" rel="alternate"></link><published>2018-07-11T16:04:37+08:00</published><updated>2018-07-11T16:04:37+08:00</updated><author><name>Walter Hu</name></author><id>tag:pingbook.top,2018-07-11:/articles/3-software-testing-black/</id><summary type="html">&lt;h2&gt;基本理论概念&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;是软件工程中的一个非常重要的环节，是开发项目整体的一部分。&lt;br&gt;
是有计划有组织的，是伴随软件工程的诞生而诞生的，软件测试不是万能的，&lt;br&gt;&amp;nbsp;不可能发现全部缺陷，软件测试是有局限性的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;测试的目的&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;1）验证软件是否满足 软件开发合同 或者项目开发计划，系统/子系统设计文档，软件需求规格说明，软件产品说明等规定的软件质量要求&lt;br&gt;
  2）通过测试，发现软件缺陷 &lt;br&gt;&amp;nbsp;3）为软件产品的质量测量和评价提供依据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;测试用例的设计规则&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;基于测试需求的原则 &lt;/li&gt;
&lt;li&gt;基于测试方法的原则&lt;/li&gt;
&lt;li&gt;兼顾 测试充分性 和&amp;nbsp;效率的原则&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;测试用例的方法有: &lt;br&gt;
a. 等价类: 是在 分析 需求规格说明 基础上，把程序的输入域 划分成 若干个部分，然后再每部分中选取 代表性数据 形成测试用例.
* 步骤：&lt;br&gt;
         a)划分有效等价类，对规格说明 是 有意义 合理的 输入数据 …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;基本理论概念&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;是软件工程中的一个非常重要的环节，是开发项目整体的一部分。&lt;br&gt;
是有计划有组织的，是伴随软件工程的诞生而诞生的，软件测试不是万能的，&lt;br&gt;&amp;nbsp;不可能发现全部缺陷，软件测试是有局限性的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;测试的目的&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;1）验证软件是否满足 软件开发合同 或者项目开发计划，系统/子系统设计文档，软件需求规格说明，软件产品说明等规定的软件质量要求&lt;br&gt;
  2）通过测试，发现软件缺陷 &lt;br&gt;&amp;nbsp;3）为软件产品的质量测量和评价提供依据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;测试用例的设计规则&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;基于测试需求的原则 &lt;/li&gt;
&lt;li&gt;基于测试方法的原则&lt;/li&gt;
&lt;li&gt;兼顾 测试充分性 和&amp;nbsp;效率的原则&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;测试用例的方法有: &lt;br&gt;
a. 等价类: 是在 分析 需求规格说明 基础上，把程序的输入域 划分成 若干个部分，然后再每部分中选取 代表性数据 形成测试用例.
* 步骤：&lt;br&gt;
         a)划分有效等价类，对规格说明 是 有意义 合理的 输入数据 所构成的集合&lt;br&gt;
         b)划分无效等价类，对 规格说明 是 无意义 不合理的 输入数据 所构成的集合&lt;br&gt;
         c) 为每一个等价类 定义一个唯一的编号&lt;br&gt;
         d）为每一个等价类 设计一组测试用例  确保&amp;nbsp;覆盖相应的等价类&lt;/p&gt;
&lt;p&gt;b.边界值分析: 边界值分析法 是针对 边界值 进行测试的 使用 等于 大于 或者小于边界值的数据对程序进行测试的方法 就是边界值分析法。&lt;br&gt;
* 步骤：&lt;br&gt;
         a）通过分析 规格说明 找出 所有 可能的 边界条件&lt;br&gt;
         b) 对每一个边界条件 给出 满足 和 不满足的输入数据&lt;br&gt;
         c) 设计相应的&amp;nbsp;测试用例  &lt;/p&gt;
&lt;p&gt;c. 错误推测法: 基于经验和直觉推测程序中所有可能存在的各种错误，从而有针对性的设计测试用例的方法。&lt;br&gt;
d.&amp;nbsp;因果图法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;等价类划分法和边界值分析方法都是着重考虑输入条件，但没有考虑输入条件的各种组合、输入条件之间的相互制约关系。这样虽然各种输入条件可能出错的情况已经测试到了，但多个输入条件组合起来可能出错的情况却被忽视了。    &lt;br&gt;&amp;nbsp;如果在测试时必须考虑输入条件的各种组合，则可能的组合数目将是天文数字，因此必须考虑采用一种适合于描述多种条件的组合、相应产生多个动作的形式来进行测试用例的设计，这就需要利用因果图（逻辑模型）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;e.&amp;nbsp;判定表驱动法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;判定表是分析和表达多逻辑条件下执行不同操作的情况的工具。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;f. 正交实验法
*&amp;nbsp;步骤  &lt;/p&gt;
&lt;p&gt;1&amp;nbsp;提取功能说明,构造因子&amp;#8212;状态表&lt;/p&gt;
&lt;p&gt;把影响实验指标的条件称为因子.而影响实验因子的条件叫因子的状态.利用正交实验设计方法来设计测试用例时,首先要根据被测试软件的规格说明书找出影响其功能实现的操作对象和外部因素,把他们当作因子,而把各个因子的取值当作状态.对软件需求规格说明中的功能要求进行划分,把整体的概要性的功能要求进行层层分解与展开,分解成具体的有相对独立性的基本的功能要求.这样就可以把被测试软件中所有的因子都确定下来,并为确定个因子的权值提供参考的依据.确定因子与状态是设计测试用例的关键.因此要求尽可能全面的正确的确定取值,以确保测试用例的设计作到完整与有效。&lt;/p&gt;
&lt;p&gt;2&amp;nbsp;加权筛选,生成因素分析表&lt;/p&gt;
&lt;p&gt;对因子与状态的选择可按其重要程度分别加权.可根据各个因子及状态的作用大小,出现频率的大小以及测试的需要,确定权值的大小。&lt;/p&gt;
&lt;p&gt;3&amp;nbsp;利用正交表构造测试数据集&lt;/p&gt;
&lt;p&gt;正交表的推导依据Galois理论（这里省略,需要时可查数理统计方面的教材）
1. Dr. Genichi Taguchi 设计的正交表: https://www.york.ac.uk/depts/maths/tables/orthogonal.htm
2. Technical Support ( support.sas.com ) com 提供的&amp;nbsp;http://support.sas.com/techsup/technote/ts723_Designs.txt&lt;/p&gt;
&lt;p&gt;利用正交实验设计方法设计测试用例,比使用等价类划分,边界值分析,因果图等方法有以下优点:节省测试工作工时；可控制生成的测试用例数量；测试用例具有一定的覆盖率。&lt;/p&gt;
&lt;p&gt;g.&amp;nbsp;场景图法  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;现在的软件几乎都是用事件触发来控制流程的，事件触发时的情景便形成了场景，而同一事件不同的触发顺序和处理结果就形成事件流。&amp;nbsp;这种在软件设计方面的思想也可以引入到软件测试中，可以比较生动地描绘出事件触发时的情景，有利于测试设计者设计测试用例，同时使测试用例更容易理解和执行。          &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;软件的内部质量&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;功能性：当软件在指定条件下使用时，软件产品 提供 满足&amp;nbsp;明确的和隐含的能力，包括适合性，准确性，互操作性，安全保密性，依从性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可靠性：在指定条件下使用时&amp;nbsp;软件产品维持规定的性能级别的能力；包括，成熟性，容错性，易恢复性，依从性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;易用性：在指定条件下使用 软件产品被理解被学习 使用和 吸引用户的能力  包括 易学性 易操作性 吸引性&amp;nbsp;依从性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;效率性：在规定条件下 软件产品执行其功能时使用合适数量和类别资源的能力；包括 资源利用性 和效率依从性&amp;nbsp;、  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;维护性：软件产品 可以被修改的能力可能包括 纠正 改进 软件对环境 需求 和功能规格说明变化的适应&amp;nbsp;包括，易分析性，易改变性，稳定性，易测试性，依从性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可移植性：软件产品&amp;nbsp;从一种环境迁移到另外一种环境的能力，包括，适应性，易安装性，共存性，易替换性，可移植性的依从性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;兼容性: 什么是兼容性测试?兼容性测试侧重哪些方面?&amp;nbsp;主要检验的是软件的可移植性，检查软件在不同的硬件平台软件平台上是否可以正常的运行。细分会有：平台的兼容，网络兼容，数据库兼容，数据格式的兼容等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;测试的生命周期&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;单元测试，集成测试，确认测试(Certify Testing)，系统测试，验收测试, 回归测试(Regression&amp;nbsp;Testing).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;单元测试:&amp;nbsp;软件设计文档&lt;/li&gt;
&lt;li&gt;集成测试：软件结构设计文档&lt;/li&gt;
&lt;li&gt;配置项测试：需求规格说明书（接口需求规格说明）&lt;/li&gt;
&lt;li&gt;系统测试：用户需求（研制合同或系统需求）&lt;/li&gt;
&lt;li&gt;验收测试：软件研制合同（用户需求或系统需求）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;测试方法&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;黑盒测试，白盒测试, 静态测试和动态测试，手工测试和动态测试，回归测试，公测
 * 白盒 
逻辑测试或者基于程序的测试，这种测试 应了解软件程序的内部构造，并且根据内部构造 来设计测试用例。发生在单元测试,集成测试或确认测试.
黑盒测试是功能性测试，一般采用穷举输入测试.
 * 黑盒
又称功能测试，数据驱动测试，或者基于规格说明的测试，这种测试不必要了解 对象的内部逻辑结构，而是根据需求说明书中的功能来设计测试用例.
白盒测试是结构测试，一般是穷举路径测试，检测内部逻辑驱动结构
 * 灰盒&amp;nbsp;持续的集成测试&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;冒烟测试&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;一段时间内 针对某个模块【刚新增的模块&amp;nbsp;或者刚刚修改完的模块】开展某个专项测试（功能测试），&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;回归测试&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;长时间，针对某个指定的版本【刚新增的模块&amp;nbsp;以及与他相关的其他模块，进行专项的测试活动】&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;功能测试&lt;/h3&gt;
&lt;p&gt;1．           测试需求：测试的规格说明书，主要作用是定义待测试的模块 和&amp;nbsp;功能模块的测试要点&lt;/p&gt;
&lt;p&gt;2．&amp;nbsp;测试计划：测试过程中的纲领性文件，对测试活动中的测试环境，测试方法，测试时间人员安排。&lt;/p&gt;
&lt;p&gt;3．&amp;nbsp;测试用例：是测试需求的细化，是一群元素的集合，主要包含，用例编号，操作步骤/测试数据，预期结果，实际结果，判定，覆盖需求。&lt;/p&gt;
&lt;p&gt;4．           缺陷报告：将软件的实际情况 和&amp;nbsp;测试用例的预期结果相比较，记录问题报告单。&lt;/p&gt;
&lt;p&gt;5．&amp;nbsp;测试的基本过程：四个过程，测试策划，测试设计，测试执行，测试总结&lt;/p&gt;
&lt;p&gt;6．&amp;nbsp;测试所需要的文档：测试需求，测试计划，测试用例，缺陷报告，测试报告（可能编写）&lt;/p&gt;
&lt;h3&gt;可能的面试题目&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Beta测试与Alpha测试有什么区别?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Beta是用户实际使用的测试，没有开发者在场，Alpha测试是公司内部测试，有开发者监控。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;什么是桩模块？什么是驱动模块？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;集成测试前要为被测模块编辑一些模拟其下级功能的子模块的替身，以代替被测模块的借口，接受或者传递数据，这些假模块被称为桩模块。&lt;/p&gt;
&lt;p&gt;驱动模块一般为主程序，它接收测试数据并将这些数据传递到被测试模块。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;什么是扇入和扇出？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;扇入是指该模块被调用的次数，扇入大，说明该模块的复用性好。&lt;/p&gt;
&lt;p&gt;扇出是指该模块调用其他模块的个数，扇出大，说明该模块的业务逻辑复杂。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;你认为做好测试工作的的关键是什么？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;目的，管理，规范。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;简述一下缺陷的生命周期?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;提交-&amp;gt;确认-&amp;gt;分配-&amp;gt;修复-&amp;gt;验证-&amp;gt;关闭&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;软件的安全性应该从哪几个方面去测试？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;1，用户认证机制，&lt;/p&gt;
&lt;p&gt;2，加密机制&lt;/p&gt;
&lt;p&gt;3，安全防护策略，安全日志等，&lt;/p&gt;
&lt;p&gt;4，数据备份和恢复&lt;/p&gt;
&lt;p&gt;5，防病毒系统。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;单元测试，集成测试，系统测试的区别？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;测试方法不同：单元测试属于白盒测试，集成测试属于灰盒测试，系统测试属于黑盒测试。&lt;/p&gt;
&lt;p&gt;考察范围测试重点不同：单元测试注重单元内部的数据结构，逻辑控制，异常处理。&lt;/p&gt;
&lt;p&gt;集成测试注重模块之间的接口及接口之间的数据传递，系统测试注重满足需求。&lt;/p&gt;
&lt;p&gt;基准不同：单元测试主要的逻辑覆盖，集成测试主要是接口覆盖，系统测试是测试用例对需求规格的覆盖率。&lt;/p&gt;</content><category term="Software Testing"></category><category term="面试"></category></entry><entry><title>[初级] pelican 博客搭建</title><link href="https://pingbook.top/articles/try-pelican/" rel="alternate"></link><published>2018-07-11T10:31:20+08:00</published><updated>2018-07-11T10:31:20+08:00</updated><author><name>Walter Hu</name></author><id>tag:pingbook.top,2018-07-11:/articles/try-pelican/</id><summary type="html">&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我真是太折腾了,也没能坚持下去,去年陆陆续续用&lt;code&gt;hexo&lt;/code&gt;写了一段时间的博客,最终没能坚持下去!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;关键字&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;pelican &lt;br&gt; markdown &lt;br&gt;&amp;nbsp;github&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;搭建步骤&lt;/h2&gt;
&lt;p&gt;最好的方式莫过于官方文档: &lt;a href="http://docs.getpelican.com/en/stable/install.html"&gt;官方入坑道路&lt;/a&gt;.&amp;nbsp;下面的步骤都是很简单,网上一堆教程,我这里就不多说了,记下这些步骤.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;// 如果需要使用markdown这个高逼格的语法去写博客&lt;/span&gt;
&lt;span class="code-line"&gt;# pip install pelican markdown typogrify &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;# mkdir pingbook.top&lt;/span&gt;
&lt;span class="code-line"&gt;# cd pingbook.top&lt;/span&gt;
&lt;span class="code-line"&gt;# pelican-quickstart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装上面的步骤操作下来后,弹出如下的提示让你配置,这些配置都可以以后在&lt;code&gt;pelicanconf.py&lt;/code&gt;修改,直接默认回车一路下去就好了! &lt;br/&gt;&amp;nbsp;pelican-quickstart执行命令后，会提示输入博客的配置项，除了少数几个必填以外，其它都可以选择默认，而且都可以在pelicanconf.py文件中进行更改，所以你可以随意选择。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;1. Where do you want to …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我真是太折腾了,也没能坚持下去,去年陆陆续续用&lt;code&gt;hexo&lt;/code&gt;写了一段时间的博客,最终没能坚持下去!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;关键字&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;pelican &lt;br&gt; markdown &lt;br&gt;&amp;nbsp;github&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;搭建步骤&lt;/h2&gt;
&lt;p&gt;最好的方式莫过于官方文档: &lt;a href="http://docs.getpelican.com/en/stable/install.html"&gt;官方入坑道路&lt;/a&gt;.&amp;nbsp;下面的步骤都是很简单,网上一堆教程,我这里就不多说了,记下这些步骤.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;// 如果需要使用markdown这个高逼格的语法去写博客&lt;/span&gt;
&lt;span class="code-line"&gt;# pip install pelican markdown typogrify &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;# mkdir pingbook.top&lt;/span&gt;
&lt;span class="code-line"&gt;# cd pingbook.top&lt;/span&gt;
&lt;span class="code-line"&gt;# pelican-quickstart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装上面的步骤操作下来后,弹出如下的提示让你配置,这些配置都可以以后在&lt;code&gt;pelicanconf.py&lt;/code&gt;修改,直接默认回车一路下去就好了! &lt;br/&gt;&amp;nbsp;pelican-quickstart执行命令后，会提示输入博客的配置项，除了少数几个必填以外，其它都可以选择默认，而且都可以在pelicanconf.py文件中进行更改，所以你可以随意选择。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;1. Where do you want to create your new web site?[.]  (你想在哪里创建你的网站，默认为当前目录)&lt;/span&gt;
&lt;span class="code-line"&gt;2. What will be the title of this web site?(网站的标题是什么)&lt;/span&gt;
&lt;span class="code-line"&gt;3. Who will be the author of this web site?(网站的作者是谁)&lt;/span&gt;
&lt;span class="code-line"&gt;4. What will be the default language of this web site? [en]   (网站的默认语言是),这里我们写&amp;#39;zh&amp;#39;中文&lt;/span&gt;
&lt;span class="code-line"&gt;5. Do you want to specify a URL prefix? e.g., http://example.com(Y/n) (是否指定域名),Y&lt;/span&gt;
&lt;span class="code-line"&gt;6. What is your URL prefix?(see above example; no trailing slash)(输入域名，不能包含反斜杠&amp;#39;/&amp;#39;),http://moelove.info&lt;/span&gt;
&lt;span class="code-line"&gt;7. Do you want to enable article pagination?(是否启用文章分页)&lt;/span&gt;
&lt;span class="code-line"&gt;8. Do you want to generate a Makefile to easily manage your website?(是否生成一个Makefile来管理网站(这里我建议生成，因为会比较方便的))&lt;/span&gt;
&lt;span class="code-line"&gt;9. Do you want an auto-reload &amp;amp; simpleHTTP script to assist with theme and site development?(是否想有一个自动加载的小型http脚本用来修改主题和站点开发)&lt;/span&gt;
&lt;span class="code-line"&gt;10. Do you want to upload your website using FTP?&lt;/span&gt;
&lt;span class="code-line"&gt;11. Do you want to upload your website using SSH?&lt;/span&gt;
&lt;span class="code-line"&gt;12. Do you want to upload your website using Dropbox?&lt;/span&gt;
&lt;span class="code-line"&gt;13. Do you want to upload your website using S3?&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;命令使用&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;由于本人使用的是windows,这里我使用了两个命令:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;# pelican content # 根据content中的内容，生成静态网站到output目下&lt;/span&gt;
&lt;span class="code-line"&gt;# cd output &amp;amp;&amp;amp; python -m pelican.server&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;# cd output &amp;amp;&amp;amp; python -m SimpleHTTPServer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;主题和插件安装&lt;/h2&gt;
&lt;h3&gt;theme安装&lt;/h3&gt;
&lt;p&gt;下载主题文件,添加配置: &lt;code&gt;THEME = './pelican-themes/gum'&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;插件安装&lt;/h3&gt;
&lt;p&gt;下载插件文件,添加如下配置: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;PLUGIN_PATHS = [u&amp;quot;pelican-plugins&amp;quot;]&lt;/span&gt;
&lt;span class="code-line"&gt;PLUGINS = [u&amp;quot;sitemap&amp;quot;,u&amp;quot;gzip_cache&amp;quot;,u&amp;quot;neighbors&amp;quot;,u&amp;quot;related_posts&amp;quot;]&lt;/span&gt;
&lt;span class="code-line"&gt;SITEMAP = {&lt;/span&gt;
&lt;span class="code-line"&gt;    &amp;#39;format&amp;#39;: &amp;#39;xml&amp;#39;,&lt;/span&gt;
&lt;span class="code-line"&gt;    &amp;#39;priorities&amp;#39;: {&lt;/span&gt;
&lt;span class="code-line"&gt;        &amp;#39;articles&amp;#39;: 0.7,&lt;/span&gt;
&lt;span class="code-line"&gt;        &amp;#39;indexes&amp;#39;: 0.5,&lt;/span&gt;
&lt;span class="code-line"&gt;        &amp;#39;pages&amp;#39;: 0.3&lt;/span&gt;
&lt;span class="code-line"&gt;    },&lt;/span&gt;
&lt;span class="code-line"&gt;    &amp;#39;changefreqs&amp;#39;: {&lt;/span&gt;
&lt;span class="code-line"&gt;        &amp;#39;articles&amp;#39;: &amp;#39;weekly&amp;#39;,&lt;/span&gt;
&lt;span class="code-line"&gt;        &amp;#39;indexes&amp;#39;: &amp;#39;daily&amp;#39;,&lt;/span&gt;
&lt;span class="code-line"&gt;        &amp;#39;pages&amp;#39;: &amp;#39;monthly&amp;#39;&lt;/span&gt;
&lt;span class="code-line"&gt;    }&lt;/span&gt;
&lt;span class="code-line"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;字体更改&lt;/h3&gt;
&lt;p&gt;1.下载字体文件,到网站的静态文件夹内,具体可以参考让wordpress主题绕开对google的依赖.不过此种方法也有些问题.把静态资源放到Github上加载时间也没别之前好多少.&lt;br&gt;
2.把Google的静态公共库替换为国内的公共库.例如我的给替换成360的镜像地址.其实这种方法也有些弊端,例如国外用户访问就会出现加载过慢的问题.但是毕竟我们在&amp;#8217;朝内&amp;#8217;,所以就换成360的资源库吧.操作如下
在对应的主题的css文件中修改对应的google font切换到国内的镜像.例如本周使用的是gum主题,转到对应的css文件&lt;code&gt;gumby.css&lt;/code&gt;,修改如下: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#static/css/目录下css文件中,例如gumby.css&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nd"&gt;@import&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;fonts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;googleapi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="n"&gt;family&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Overlock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;700&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;900&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nd"&gt;@import&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;fonts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;googleapi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="n"&gt;family&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PT&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Mono&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#替换为&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nd"&gt;@import&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;fonts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;useso&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="n"&gt;family&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Overlock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;700&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;900&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nd"&gt;@import&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;fonts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;useso&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="n"&gt;family&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PT&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Mono&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;国内其他开公共库: 百度CDN公共库; 新浪云计算CDN公共库; 又拍云JS库CDN服务;&amp;nbsp;七牛云静态文件CDN;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;高级语法&lt;/h2&gt;
&lt;h3&gt;静态图片&lt;/h3&gt;
&lt;p&gt;新建一个目录在&lt;code&gt;content&lt;/code&gt;下面,例如&lt;code&gt;images&lt;/code&gt;,然后在&lt;code&gt;pelicanconf.py&lt;/code&gt;设置如下:
&lt;code&gt;STATIC_PATHS = ['images','downloads']&lt;/code&gt;
,在对应的md中可以这样写语法:&lt;/p&gt;
&lt;p&gt;&lt;img alt="测试图片显示" src="https://pingbook.top/articles/try-pelican/test.png"&gt;&lt;/p&gt;
&lt;h2&gt;部署&lt;/h2&gt;
&lt;h3&gt;部署到github上&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;新建一个仓库,仓库名称和你的昵称相同或者创建一个组织&lt;/li&gt;
&lt;li&gt;使用如下命令上传&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;cd output&lt;/span&gt;
&lt;span class="code-line"&gt;git init&lt;/span&gt;
&lt;span class="code-line"&gt;git add .&lt;/span&gt;
&lt;span class="code-line"&gt;git remote add origin 仓库git地址&lt;/span&gt;
&lt;span class="code-line"&gt;git push -u origin master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="pelican"></category></entry><entry><title>[面试] 白盒测试需要关注的知识点</title><link href="https://pingbook.top/articles/4-software-testing-white/" rel="alternate"></link><published>2018-07-11T08:47:28+08:00</published><updated>2018-07-11T08:47:28+08:00</updated><author><name>Walter Hu</name></author><id>tag:pingbook.top,2018-07-11:/articles/4-software-testing-white/</id><summary type="html">&lt;p&gt;参考博客: &lt;a href="https://www.cnblogs.com/molrang/p/6420918.html"&gt;https://www.cnblogs.com/molrang/p/6420918.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;自动化测试&lt;/h2&gt;
&lt;h3&gt;考虑的因素&lt;/h3&gt;
&lt;p&gt;①、项目的影响（能否帮助项目进度、覆盖率、风险）&lt;/p&gt;
&lt;p&gt;②、复杂度（是否容易实现，包括数据和其他环境等）&lt;/p&gt;
&lt;p&gt;③、时间（实现自动化需要多少时间）&lt;/p&gt;
&lt;p&gt;④、早期需求和代码的稳定性（需求或代码能否证明是在范围内变化的）&lt;/p&gt;
&lt;p&gt;⑤、维护工作量（代码能否能长期保持相对稳定）&lt;/p&gt;
&lt;p&gt;⑥、覆盖率（自动化测试能否覆盖程序的关键特性和功能）&lt;/p&gt;
&lt;p&gt;⑦、资源（是否拥有足够的人力、硬件和数据资源来运行自动化测试）&lt;/p&gt;
&lt;p&gt;⑧、执行（负责执行的人员是否有足够的技能和时间去运行）&lt;/p&gt;
&lt;p&gt;⑨、自动化测试管理&lt;/p&gt;
&lt;h2&gt;白盒测试&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;按照程序内部结构，逻辑驱动测试程序,目的是检测产品内部动作是否按照设计说明书的规范进行，检验程序的每条路径是否都能按照预定要求进行工作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;白盒测试方法&lt;/h3&gt;
&lt;p&gt;①、静态测试&amp;nbsp;静态测试是指不运行程序本身 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;参考博客: &lt;a href="https://www.cnblogs.com/molrang/p/6420918.html"&gt;https://www.cnblogs.com/molrang/p/6420918.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;自动化测试&lt;/h2&gt;
&lt;h3&gt;考虑的因素&lt;/h3&gt;
&lt;p&gt;①、项目的影响（能否帮助项目进度、覆盖率、风险）&lt;/p&gt;
&lt;p&gt;②、复杂度（是否容易实现，包括数据和其他环境等）&lt;/p&gt;
&lt;p&gt;③、时间（实现自动化需要多少时间）&lt;/p&gt;
&lt;p&gt;④、早期需求和代码的稳定性（需求或代码能否证明是在范围内变化的）&lt;/p&gt;
&lt;p&gt;⑤、维护工作量（代码能否能长期保持相对稳定）&lt;/p&gt;
&lt;p&gt;⑥、覆盖率（自动化测试能否覆盖程序的关键特性和功能）&lt;/p&gt;
&lt;p&gt;⑦、资源（是否拥有足够的人力、硬件和数据资源来运行自动化测试）&lt;/p&gt;
&lt;p&gt;⑧、执行（负责执行的人员是否有足够的技能和时间去运行）&lt;/p&gt;
&lt;p&gt;⑨、自动化测试管理&lt;/p&gt;
&lt;h2&gt;白盒测试&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;按照程序内部结构，逻辑驱动测试程序,目的是检测产品内部动作是否按照设计说明书的规范进行，检验程序的每条路径是否都能按照预定要求进行工作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;白盒测试方法&lt;/h3&gt;
&lt;p&gt;①、静态测试&amp;nbsp;静态测试是指不运行程序本身，仅通过分析程序文档结构，软件执行过程，检测程序的正确性，主要有变量，接口，递归等。&lt;/p&gt;
&lt;p&gt;②、动态测试&amp;nbsp;动态方法是指运行程序，检查运行结果与预期结果对比差异，并分析抗压性，健壮性等，这种测试包括三部分：构造测试实例，执行程序，分析程序输出结果。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;区别一：静态测试是用于预防的，动态测试是用于矫正的  &lt;/span&gt;
&lt;span class="code-line"&gt;区别二：多次的静态测试比动态测试要效率和效益高  &lt;/span&gt;
&lt;span class="code-line"&gt;区别三：静态测试综合测试程序代码  &lt;/span&gt;
&lt;span class="code-line"&gt;区别四：在相当短的时间里，静态测试的覆盖度能达到100%，而动态测试经常是只能达到50%左右，原因动态测试发现的bug大部分只是在测试实际执行的那部分代码  &lt;/span&gt;
&lt;span class="code-line"&gt;区别五：动态测试比静态测试更花时间  &lt;/span&gt;
&lt;span class="code-line"&gt;区别六：静态测试比动态测试更能发现 bug  &lt;/span&gt;
&lt;span class="code-line"&gt;区别七：静态测试的执行可以在程序编码编译前，动态测试只能在编译后才能执行  &lt;/span&gt;
&lt;span class="code-line"&gt;区别八：静态测试能发现动态测试所不能发现的一些:&amp;quot;Syntax error,code that hard to maintain,code that hard to test,code that does not confirm to coding standard, and ANSI violations&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;白盒测试方法&lt;/p&gt;
&lt;p&gt;①、尽量先用自动化工具来进行静态解析&lt;/p&gt;
&lt;p&gt;②、建议先从静态测试开始（静态结构分析、代码走查、静态质量度量），然后进行动态测试（如覆盖率测试）&lt;/p&gt;
&lt;p&gt;③、以静态分析结果作为依据，再使用代码检查和动态测试方法对静态分析结果进行进一步确认，提高测试效率及准确性&lt;/p&gt;
&lt;p&gt;④、覆盖率测试是白盒测试的重要手段，在测试报告中可作为量化指标的依据，对于软件的重点模块，应使用多种覆盖率标准衡量代码的覆盖率&lt;/p&gt;
&lt;p&gt;包括的有代码检查,SQL语句的测试,&lt;/p&gt;</content><category term="白盒测试"></category><category term="软件测试"></category><category term="面试"></category></entry><entry><title>[Linux环境搭建] Debian安装编译和安装nginx服务器</title><link href="https://pingbook.top/articles/pi-nginx/" rel="alternate"></link><published>2018-07-10T22:11:17+08:00</published><updated>2018-07-10T22:11:17+08:00</updated><author><name>Walter Hu</name></author><id>tag:pingbook.top,2018-07-10:/articles/pi-nginx/</id><summary type="html">&lt;h2&gt;Debian安装配置nginx服务器&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;下载解压缩安装包&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo wget https://nginx.org/download/nginx-1.15.1.tar.gz&lt;/span&gt;
&lt;span class="code-line"&gt;$ tar zxvf nginx-1.15.1.tar.gz &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;重新配置nginx的服务器名称servername和对应版本&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; nginx-1.15.1/&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo nano  src/http/ngx_http_header_filter_module.c&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo nano  src/core/nginx.h&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo nano nginx-1.15.1-openbook.top.tar.gz nginx-1.15.1/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;安装对应的nginx的所有依赖的包, gcc环境 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2&gt;Debian安装配置nginx服务器&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;下载解压缩安装包&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo wget https://nginx.org/download/nginx-1.15.1.tar.gz&lt;/span&gt;
&lt;span class="code-line"&gt;$ tar zxvf nginx-1.15.1.tar.gz &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;重新配置nginx的服务器名称servername和对应版本&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; nginx-1.15.1/&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo nano  src/http/ngx_http_header_filter_module.c&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo nano  src/core/nginx.h&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo nano nginx-1.15.1-openbook.top.tar.gz nginx-1.15.1/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;安装对应的nginx的所有依赖的包, gcc环境, pcre, zlib and&amp;nbsp;openssl&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt install build-essential -y&lt;/span&gt;
&lt;span class="code-line"&gt;$ wget https://ftp.pcre.org/pub/pcre/pcre-8.41.tar.gz&lt;/span&gt;
&lt;span class="code-line"&gt;$ tar zxvf pcre-8.41.tar.gz&lt;/span&gt;
&lt;span class="code-line"&gt;$ wget http://www.zlib.net/zlib-1.2.11.tar.gz&lt;/span&gt;
&lt;span class="code-line"&gt;$ tar -zxvf zlib-1.2.11.tar.gz&lt;/span&gt;
&lt;span class="code-line"&gt;$ wget https://www.openssl.org/source/openssl-1.1.0g.tar.gz &lt;/span&gt;
&lt;span class="code-line"&gt;$ tar zxvf openssl-1.1.0g.tar.gz&lt;/span&gt;
&lt;span class="code-line"&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; openssl-1.1.0g&lt;/span&gt;
&lt;span class="code-line"&gt;$ ./config -Wl,--enable-new-dtags,-rpath,&lt;span class="s1"&gt;&amp;#39;$(LIBRPATH)&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ make  &lt;span class="c1"&gt;# 大约五六分钟左右&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo make install&lt;/span&gt;
&lt;span class="code-line"&gt;$ openssl version -a&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;安装nginx
参考说明文档: &lt;a href="https://www.vultr.com/docs/how-to-compile-nginx-from-source-on-ubuntu-16-04"&gt;https://www.vultr.com/docs/how-to-compile-nginx-from-source-on-ubuntu-16-04&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; nginx-1.15.1&lt;/span&gt;
&lt;span class="code-line"&gt;$ ./configure --prefix&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/nginx &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --sbin-path&lt;span class="o"&gt;=&lt;/span&gt;/usr/sbin/nginx &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --modules-path&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/nginx/modules &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --conf-path&lt;span class="o"&gt;=&lt;/span&gt;/etc/nginx/nginx.conf &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --error-log-path&lt;span class="o"&gt;=&lt;/span&gt;/var/log/nginx/error.log &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --http-log-path&lt;span class="o"&gt;=&lt;/span&gt;/var/log/nginx/access.log &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --pid-path&lt;span class="o"&gt;=&lt;/span&gt;/run/nginx.pid &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --lock-path&lt;span class="o"&gt;=&lt;/span&gt;/var/lock/nginx.lock &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --user&lt;span class="o"&gt;=&lt;/span&gt;www-data &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --group&lt;span class="o"&gt;=&lt;/span&gt;www-data &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --http-client-body-temp-path&lt;span class="o"&gt;=&lt;/span&gt;/var/lib/nginx/body &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --http-fastcgi-temp-path&lt;span class="o"&gt;=&lt;/span&gt;/var/lib/nginx/fastcgi &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --http-proxy-temp-path&lt;span class="o"&gt;=&lt;/span&gt;/var/lib/nginx/proxy &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --http-scgi-temp-path&lt;span class="o"&gt;=&lt;/span&gt;/var/lib/nginx/scgi &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --http-uwsgi-temp-path&lt;span class="o"&gt;=&lt;/span&gt;/var/lib/nginx/uwsgi &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-openssl&lt;span class="o"&gt;=&lt;/span&gt;../openssl-1.1.0g &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-openssl-opt&lt;span class="o"&gt;=&lt;/span&gt;enable-ec_nistp_64_gcc_128 &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-openssl-opt&lt;span class="o"&gt;=&lt;/span&gt;no-nextprotoneg &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-openssl-opt&lt;span class="o"&gt;=&lt;/span&gt;no-weak-ssl-ciphers &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-openssl-opt&lt;span class="o"&gt;=&lt;/span&gt;no-ssl3 &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-pcre&lt;span class="o"&gt;=&lt;/span&gt;../pcre-8.41 &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-pcre-jit &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-zlib&lt;span class="o"&gt;=&lt;/span&gt;../zlib-1.2.11 &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-compat &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-file-aio &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-threads &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-http_addition_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-http_auth_request_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-http_dav_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-http_flv_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-http_gunzip_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-http_gzip_static_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-http_mp4_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-http_random_index_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-http_realip_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-http_slice_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-http_ssl_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-http_sub_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-http_stub_status_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-http_v2_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-http_secure_link_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-mail &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-mail_ssl_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-stream &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-stream_realip_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-stream_ssl_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-stream_ssl_preread_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-debug &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-cc-opt&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-g -O2 -fPIE -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2&amp;#39;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            --with-ld-opt&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-Wl,-Bsymbolic-functions -fPIE -pie -Wl,-z,relro -Wl,-z,now&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ make   &lt;span class="c1"&gt;#这个操作需要花费十分钟左右&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo make install&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo systemctl start nginx.service &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; nginx.service&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;遇到的问题&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;nginx: [emerg] mkdir() &amp;quot;/var/lib/nginx/body&amp;quot; failed&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Just create directory
&lt;code&gt;$ sudo mkdir -p /var/lib/nginx &amp;amp;&amp;amp; sudo nginx -t&lt;/code&gt;
&lt;code&gt;$ sudo nano /lib/systemd/system/nginx.service&lt;/code&gt;
输入如下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;# Stop dance for nginx&lt;/span&gt;
&lt;span class="code-line"&gt;# =======================&lt;/span&gt;
&lt;span class="code-line"&gt;#&lt;/span&gt;
&lt;span class="code-line"&gt;# ExecStop sends SIGSTOP (graceful stop) to the nginx process.&lt;/span&gt;
&lt;span class="code-line"&gt;# If, after 5s (--retry QUIT/5) nginx is still running, systemd takes control&lt;/span&gt;
&lt;span class="code-line"&gt;# and sends SIGTERM (fast shutdown) to the main process.&lt;/span&gt;
&lt;span class="code-line"&gt;# After another 5s (TimeoutStopSec=5), and if nginx is alive, systemd sends&lt;/span&gt;
&lt;span class="code-line"&gt;# SIGKILL to all the remaining processes in the process group (KillMode=mixed).&lt;/span&gt;
&lt;span class="code-line"&gt;#&lt;/span&gt;
&lt;span class="code-line"&gt;# nginx signals reference doc:&lt;/span&gt;
&lt;span class="code-line"&gt;# http://nginx.org/en/docs/control.html&lt;/span&gt;
&lt;span class="code-line"&gt;#&lt;/span&gt;
&lt;span class="code-line"&gt;[Unit]&lt;/span&gt;
&lt;span class="code-line"&gt;Description=A high performance web server and a reverse proxy server&lt;/span&gt;
&lt;span class="code-line"&gt;Documentation=man:nginx(8)&lt;/span&gt;
&lt;span class="code-line"&gt;After=network.target&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;[Service]&lt;/span&gt;
&lt;span class="code-line"&gt;Type=forking&lt;/span&gt;
&lt;span class="code-line"&gt;PIDFile=/run/nginx.pid&lt;/span&gt;
&lt;span class="code-line"&gt;ExecStartPre=/usr/sbin/nginx -t -q -g &amp;#39;daemon on; master_process on;&amp;#39;&lt;/span&gt;
&lt;span class="code-line"&gt;ExecStart=/usr/sbin/nginx -g &amp;#39;daemon on; master_process on;&amp;#39;&lt;/span&gt;
&lt;span class="code-line"&gt;ExecReload=/usr/sbin/nginx -g &amp;#39;daemon on; master_process on;&amp;#39; -s reload&lt;/span&gt;
&lt;span class="code-line"&gt;ExecStop=-/sbin/start-stop-daemon --quiet --stop --retry QUIT/5 --pidfile /run/nginx.pid&lt;/span&gt;
&lt;span class="code-line"&gt;TimeoutStopSec=5&lt;/span&gt;
&lt;span class="code-line"&gt;KillMode=mixed&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;[Install]&lt;/span&gt;
&lt;span class="code-line"&gt;WantedBy=multi-user.target&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;重启nginx服务
&lt;code&gt;sudo systemctl start nginx.service &amp;amp;&amp;amp; sudo systemctl enable nginx.service&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;check nginx service is&amp;nbsp;up&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo systemctl status nginx.service&lt;/span&gt;
&lt;span class="code-line"&gt;$ ps aux &lt;span class="p"&gt;|&lt;/span&gt; grep nginx&lt;/span&gt;
&lt;span class="code-line"&gt;$ curl -I &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;重启nginx出现&lt;code&gt;Directory index of "/www/pingbook.top/pingbook.top/output/" is forbidden,&lt;/code&gt;
解决方法是在location里面设置index&amp;nbsp;index.html,如下: &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;  location / {&lt;/span&gt;
&lt;span class="code-line"&gt;     # 使用alias时，目录名后面一定要加”/“&lt;/span&gt;
&lt;span class="code-line"&gt;     alias /www/pingbook.top/pingbook.top/output/;&lt;/span&gt;
&lt;span class="code-line"&gt;     index index.html;&lt;/span&gt;
&lt;span class="code-line"&gt;     try_files $uri $uri/ index.html last;&lt;/span&gt;
&lt;span class="code-line"&gt;  }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Https&amp;nbsp;加密你的网站&lt;/h2&gt;
&lt;p&gt;参考文档:&amp;nbsp;https://certbot.eff.org/lets-encrypt/debianother-nginx&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$  sudo wget https://dl.eff.org/certbot-auto&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo chmod a+x certbot-auto&lt;/span&gt;
&lt;span class="code-line"&gt;$ &lt;span class="c1"&gt;# 获取证书&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo ./certbot-auto certonly --standalone --email alterhu2020@gmail.com -d pingbook.top -d www.pingbook.top&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;报错如下,很多的依赖没有安装成功:&lt;/span&gt;
&lt;span class="code-line"&gt;dpkg: error processing package python-zope.component &lt;span class="o"&gt;(&lt;/span&gt;--configure&lt;span class="o"&gt;)&lt;/span&gt;:&lt;/span&gt;
&lt;span class="code-line"&gt; dependency problems - leaving unconfigured&lt;/span&gt;
&lt;span class="code-line"&gt;Setting up libaugeas0 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.8.0-1+deb9u1&lt;span class="o"&gt;)&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="code-line"&gt;dpkg: dependency problems prevent configuration of python-mock:&lt;/span&gt;
&lt;span class="code-line"&gt; python-mock depends on python-funcsigs &lt;span class="o"&gt;(&lt;/span&gt;&amp;gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; however:&lt;/span&gt;
&lt;span class="code-line"&gt;  Package python-funcsigs is not configured yet.&lt;/span&gt;
&lt;span class="code-line"&gt; python-mock depends on python-pbr &lt;span class="o"&gt;(&lt;/span&gt;&amp;gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;.3&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; however:&lt;/span&gt;
&lt;span class="code-line"&gt;  Package python-pbr is not configured yet.&lt;/span&gt;
&lt;span class="code-line"&gt; python-mock depends on python-six &lt;span class="o"&gt;(&lt;/span&gt;&amp;gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;.9&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; however:&lt;/span&gt;
&lt;span class="code-line"&gt;  Package python-six is not configured yet.&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dpkg: error processing package python-mock &lt;span class="o"&gt;(&lt;/span&gt;--configure&lt;span class="o"&gt;)&lt;/span&gt;:&lt;/span&gt;
&lt;span class="code-line"&gt; dependency problems - leaving unconfigured&lt;/span&gt;
&lt;span class="code-line"&gt;dpkg: dependency problems prevent configuration of python-requests:&lt;/span&gt;
&lt;span class="code-line"&gt; python-requests depends on python-urllib3 &lt;span class="o"&gt;(&lt;/span&gt;&amp;gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;.19.1&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; however:&lt;/span&gt;
&lt;span class="code-line"&gt;  Package python-urllib3 is not configured yet.&lt;/span&gt;
&lt;span class="code-line"&gt; python-requests depends on python-chardet&lt;span class="p"&gt;;&lt;/span&gt; however:&lt;/span&gt;
&lt;span class="code-line"&gt;  Package python-chardet is not configured yet.&lt;/span&gt;
&lt;span class="code-line"&gt; python-requests depends on python-urllib3 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;&amp;lt; 1.1&lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;.2&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; however:&lt;/span&gt;
&lt;span class="code-line"&gt;  Package python-urllib3 is not configured yet.&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dpkg: error processing package python-requests &lt;span class="o"&gt;(&lt;/span&gt;--configure&lt;span class="o"&gt;)&lt;/span&gt;:&lt;/span&gt;
&lt;span class="code-line"&gt; dependency problems - leaving unconfigured&lt;/span&gt;
&lt;span class="code-line"&gt;dpkg: dependency problems prevent configuration of certbot:&lt;/span&gt;
&lt;span class="code-line"&gt; certbot depends on python-certbot &lt;span class="o"&gt;(=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;.10.2-1&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; however:&lt;/span&gt;
&lt;span class="code-line"&gt;  Package python-certbot is not configured yet.&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;dpkg: error processing package certbot &lt;span class="o"&gt;(&lt;/span&gt;--configure&lt;span class="o"&gt;)&lt;/span&gt;:&lt;/span&gt;
&lt;span class="code-line"&gt; dependency problems - leaving unconfigured&lt;/span&gt;
&lt;span class="code-line"&gt;Processing triggers &lt;span class="k"&gt;for&lt;/span&gt; libc-bin &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.24-11+deb9u3&lt;span class="o"&gt;)&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="code-line"&gt;Errors were encountered &lt;span class="k"&gt;while&lt;/span&gt; processing:&lt;/span&gt;
&lt;span class="code-line"&gt; python-dnspython&lt;/span&gt;
&lt;span class="code-line"&gt; python-idna&lt;/span&gt;
&lt;span class="code-line"&gt; python-parsedatetime&lt;/span&gt;
&lt;span class="code-line"&gt; python-pyasn1&lt;/span&gt;
&lt;span class="code-line"&gt; python-tz&lt;/span&gt;
&lt;span class="code-line"&gt; python-pkg-resources&lt;/span&gt;
&lt;span class="code-line"&gt; python-configargparse&lt;/span&gt;
&lt;span class="code-line"&gt; python-six&lt;/span&gt;
&lt;span class="code-line"&gt; python-zope.interface&lt;/span&gt;
&lt;span class="code-line"&gt; python-psutil&lt;/span&gt;
&lt;span class="code-line"&gt; python-pbr&lt;/span&gt;
&lt;span class="code-line"&gt; python-enum34&lt;/span&gt;
&lt;span class="code-line"&gt; python-cryptography&lt;/span&gt;
&lt;span class="code-line"&gt; python-virtualenv&lt;/span&gt;
&lt;span class="code-line"&gt; python-funcsigs&lt;/span&gt;
&lt;span class="code-line"&gt; python-zope.hookable&lt;/span&gt;
&lt;span class="code-line"&gt; python-ipaddress&lt;/span&gt;
&lt;span class="code-line"&gt; python-pyicu&lt;/span&gt;
&lt;span class="code-line"&gt; python-zope.event&lt;/span&gt;
&lt;span class="code-line"&gt; python-rfc3339&lt;/span&gt;
&lt;span class="code-line"&gt; python-setuptools&lt;/span&gt;
&lt;span class="code-line"&gt; python-urllib3&lt;/span&gt;
&lt;span class="code-line"&gt; python-configobj&lt;/span&gt;
&lt;span class="code-line"&gt; python-chardet&lt;/span&gt;
&lt;span class="code-line"&gt; python-acme&lt;/span&gt;
&lt;span class="code-line"&gt; python-openssl&lt;/span&gt;
&lt;span class="code-line"&gt; python-certbot&lt;/span&gt;
&lt;span class="code-line"&gt; python-zope.component&lt;/span&gt;
&lt;span class="code-line"&gt; python-mock&lt;/span&gt;
&lt;span class="code-line"&gt; python-requests&lt;/span&gt;
&lt;span class="code-line"&gt; certbot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sub-process /usr/bin/dpkg returned an error code&amp;nbsp;(1)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /var/cache/apt/&lt;/span&gt;
&lt;span class="code-line"&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; archives/&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo rm -rf *&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;所以我想起以前用的一个网友的脚本,不用安装一堆繁杂的包,地址:
&lt;a href="https://github.com/xdtianyu/scripts/blob/master/lets-encrypt/README-CN.md"&gt;https://github.com/xdtianyu/scripts/blob/master/lets-encrypt/&lt;span class="caps"&gt;README&lt;/span&gt;-&lt;span class="caps"&gt;CN&lt;/span&gt;.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;
1.&amp;nbsp;在nginx的配置文件里面配置location:&lt;/p&gt;
&lt;p&gt;# https 的配置Let’s Encrypt
 location ^~ /.well-known/acme-challenge/ {
   allow all;
   default_type &amp;#8220;text/plain&amp;#8221;;
   root /www;&amp;nbsp;}&lt;/p&gt;
&lt;p&gt;$ sudo wget https://raw.githubusercontent.com/xdtianyu/scripts/master/lets-encrypt/letsencrypt.conf
$ sudo wget https://raw.githubusercontent.com/xdtianyu/scripts/master/lets-encrypt/letsencrypt.sh
$ sudo chmod +x letsencrypt.sh
$ sudo nano letsencrypt.conf
$ sudo ./letsencrypt.sh letsencrypt.conf&amp;nbsp;&amp;#8220;&lt;/p&gt;</content><category term="nginx"></category></entry><entry><title>[Linux环境搭建] 配置采用NAT123进行树莓派部署</title><link href="https://pingbook.top/articles/pi-nat123/" rel="alternate"></link><published>2018-07-10T20:47:02+08:00</published><updated>2018-07-10T20:47:02+08:00</updated><author><name>Walter Hu</name></author><id>tag:pingbook.top,2018-07-10:/articles/pi-nat123/</id><summary type="html">&lt;h2&gt;安装步骤&lt;/h2&gt;
&lt;p&gt;2018-07-09 更新,下面的方法如果安装失败,尝试官方的安装指南: &lt;a href="http://www.mono-project.com/download/stable/#download-lin-raspbian"&gt;http://www.mono-project.com/download/stable/#download-lin-raspbian&lt;/a&gt;
1. 下载对应的linux版本的nat123安装包: http://www.nat123.com/Pages_2_32.jsp&lt;br&gt;
2. 解压缩到一个目录里面: tar zxvf nat123linux20180627.tar.gz
~~3. 安装&lt;code&gt;sudo apt-get  install  -y mono-complete&lt;/code&gt;,如果安装失败,请参见另外的一篇文章设置对应的国内镜像: &lt;a href="https://pingbook.top/articles/pi-mirrors/"&gt;https://pingbook.top/articles/pi-mirrors/&lt;/a&gt;~~
4. 上面的&lt;code&gt;momo-complete&lt;/code&gt;的安装需要一段时间,大约十分钟左右.~~&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ mono  /home/pi/nat123 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;安装步骤&lt;/h2&gt;
&lt;p&gt;2018-07-09 更新,下面的方法如果安装失败,尝试官方的安装指南: &lt;a href="http://www.mono-project.com/download/stable/#download-lin-raspbian"&gt;http://www.mono-project.com/download/stable/#download-lin-raspbian&lt;/a&gt;
1. 下载对应的linux版本的nat123安装包: http://www.nat123.com/Pages_2_32.jsp&lt;br&gt;
2. 解压缩到一个目录里面: tar zxvf nat123linux20180627.tar.gz
~~3. 安装&lt;code&gt;sudo apt-get  install  -y mono-complete&lt;/code&gt;,如果安装失败,请参见另外的一篇文章设置对应的国内镜像: &lt;a href="https://pingbook.top/articles/pi-mirrors/"&gt;https://pingbook.top/articles/pi-mirrors/&lt;/a&gt;~~
4. 上面的&lt;code&gt;momo-complete&lt;/code&gt;的安装需要一段时间,大约十分钟左右.~~&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ mono  /home/pi/nat123/nat123linux.sh  service  &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;采用如下方式进行安装&lt;code&gt;mono-complete&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;参考地址: &lt;a href="http://www.mono-project.com/download/stable/#download-lin-raspbian"&gt;http://www.mono-project.com/download/stable/#download-lin-raspbian&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt install apt-transport-https dirmngr&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF&lt;/span&gt;
&lt;span class="code-line"&gt;$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;deb https://download.mono-project.com/repo/debian stable-raspbianstretch main&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sudo tee /etc/apt/sources.list.d/mono-official-stable.list&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo apt update&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo apt install mono-complete&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="NAT123"></category><category term="树莓派"></category></entry><entry><title>[Linux环境搭建] Debian如何安装配置Tomcat9</title><link href="https://pingbook.top/articles/pi-tomcat/" rel="alternate"></link><published>2018-07-09T22:46:39+08:00</published><updated>2018-07-09T22:46:39+08:00</updated><author><name>Walter Hu</name></author><id>tag:pingbook.top,2018-07-09:/articles/pi-tomcat/</id><summary type="html">&lt;h2&gt;安装&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;参考文档:&lt;br&gt;
&lt;em&gt; &lt;a href="https://www.howtoforge.com/tutorial/ubuntu-apache-tomcat/"&gt;https://www.howtoforge.com/tutorial/ubuntu-apache-tomcat/&lt;/a&gt;&lt;br&gt;
&lt;/em&gt; 推荐: &lt;a href="https://gist.github.com/jniltinho/a7bd30288342a5d352e6#file-install_tomcat-sh-L33"&gt;https://gist.github.com/jniltinho/a7bd30288342a5d352e6#file-install_tomcat-sh-L33&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;安装JDK和配置环境变量(采用下面的配置环境变量/etc/profile), 注意截止到20180709,&amp;nbsp;oracle没有提供debain的32位系统安装tar包,所以这里使用的是32位的jdk1.8&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ nano ~/.bashrc&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;JAVA_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/jvm/jdk-8-oracle-arm32-vfp-hflt&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$JAVA_HOME&lt;/span&gt;/bin:&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ &lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc&lt;/span&gt;
&lt;span class="code-line"&gt;$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$JAVA_HOME&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;添加组和用户&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo groupadd tomcat&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo useradd -s /bin/false …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;安装&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;参考文档:&lt;br&gt;
&lt;em&gt; &lt;a href="https://www.howtoforge.com/tutorial/ubuntu-apache-tomcat/"&gt;https://www.howtoforge.com/tutorial/ubuntu-apache-tomcat/&lt;/a&gt;&lt;br&gt;
&lt;/em&gt; 推荐: &lt;a href="https://gist.github.com/jniltinho/a7bd30288342a5d352e6#file-install_tomcat-sh-L33"&gt;https://gist.github.com/jniltinho/a7bd30288342a5d352e6#file-install_tomcat-sh-L33&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;安装JDK和配置环境变量(采用下面的配置环境变量/etc/profile), 注意截止到20180709,&amp;nbsp;oracle没有提供debain的32位系统安装tar包,所以这里使用的是32位的jdk1.8&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ nano ~/.bashrc&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;JAVA_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/jvm/jdk-8-oracle-arm32-vfp-hflt&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$JAVA_HOME&lt;/span&gt;/bin:&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ &lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc&lt;/span&gt;
&lt;span class="code-line"&gt;$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$JAVA_HOME&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;添加组和用户&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo groupadd tomcat&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo useradd -s /bin/false -g tomcat -d /opt/tomcat tomcat&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;下载tomcat9&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ tar zxvf jdk1.8.0_171.tar.gz&lt;/span&gt;
&lt;span class="code-line"&gt;$  sudo nano /etc/profile&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;JAVA_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/pi/jdk1.8.0_171&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;CLASSPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$JAVA_HOME&lt;/span&gt;/lib/&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;:&lt;span class="nv"&gt;$JAVA_HOME&lt;/span&gt;/bin&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; PATH JAVA_HOME CLASSPATH&lt;/span&gt;
&lt;span class="code-line"&gt;$ &lt;span class="nb"&gt;source&lt;/span&gt; /etc/profile&lt;/span&gt;
&lt;span class="code-line"&gt;$ java 可能下载的是64位的jdk,但是系统只能运行32位的jdk&lt;/span&gt;
&lt;span class="code-line"&gt;/bin/javac: cannot execute binary file: Exec format error&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /home/pi&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo wget http://apache.cs.utah.edu/tomcat/tomcat-9/v9.0.10/bin/apache-tomcat-9.0.10.tar.gz&lt;/span&gt;
&lt;span class="code-line"&gt;$  tar zxvf apache-tomcat-9.0.10.tar.gz &lt;/span&gt;
&lt;span class="code-line"&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /home/pi/apache-tomcat-9.0.10/&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo groupadd tomcat &lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo useradd -M -s /bin/nologin -g tomcat -d /home/pi/apache-tomcat-9.0.10 tomcat&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo chgrp -R tomcat conf&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo chmod g+rwx conf&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo chmod g+r conf/*&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo chown -R tomcat webapps/ work/ temp/ logs/&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo chown -R tomcat:tomcat *&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo chown -R tomcat:tomcat /home/pi/apache-tomcat-9.0.10&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo chmod -R &lt;span class="m"&gt;757&lt;/span&gt; conf/&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo chmod -R &lt;span class="m"&gt;757&lt;/span&gt; logs/&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo chmod -R &lt;span class="m"&gt;757&lt;/span&gt; webapps/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置&amp;nbsp;tomcat开机启动&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo nano /etc/systemd/system/tomcat.service&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Systemd unit file for tomcat&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;Unit&lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Apache Tomcat Web Application Container&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;After&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;syslog.target network.target&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;Service&lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;forking&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;Environment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;JAVA_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/pi/jdk1.8.0_171&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;Environment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;CATALINA_PID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/pi/apache-tomcat-9.0.10/temp/tomcat.pid&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;Environment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;CATALINA_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/pi/apache-tomcat-9.0.10&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;Environment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;CATALINA_BASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/pi/apache-tomcat-9.0.10&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;Environment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;CATALINA_OPTS=-Xms512M -Xmx824M -server -XX:+UseParallelGC&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;Environment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;ExecStart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/pi/apache-tomcat-9.0.10/bin/startup.sh&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;ExecStop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/bin/kill -15 &lt;span class="nv"&gt;$MAINPID&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;User&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tomcat&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;Group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tomcat&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;Install&lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;multi-user.target&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo systemctl daemon-reload&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo systemctl start tomcat&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; tomcat&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Configure Apache Tomcat&amp;nbsp;User&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /home/pi/apache-tomcat-9.0.10/conf/&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo nano tomcat-users.xml&lt;/span&gt;
&lt;span class="code-line"&gt;&amp;lt;role &lt;span class="nv"&gt;rolename&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;manager-gui&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&amp;lt;user &lt;span class="nv"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;roles&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;manager-gui,admin-gui&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; webapps/manager/META-INF/&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo nano context.xml&lt;/span&gt;
&lt;span class="code-line"&gt;comment:&lt;/span&gt;
&lt;span class="code-line"&gt;&amp;lt;!--  &amp;lt;Valve &lt;span class="nv"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;org.apache.catalina.valves.RemoteAddrValve&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;         &lt;span class="nv"&gt;allow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1&amp;quot;&lt;/span&gt; /&amp;gt; --&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;$cd&lt;/span&gt; webapps/host-manager/META-INF/&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#sudo nano context.xml&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;comment:&lt;/span&gt;
&lt;span class="code-line"&gt;&amp;lt;!--  &amp;lt;Valve &lt;span class="nv"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;org.apache.catalina.valves.RemoteAddrValve&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;         &lt;span class="nv"&gt;allow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1&amp;quot;&lt;/span&gt; /&amp;gt; --&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo systemctl restart tomcat.service&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Tomcat9"></category></entry><entry><title>[Linux环境搭建] svn 安装配置</title><link href="https://pingbook.top/articles/pi-svn/" rel="alternate"></link><published>2018-07-09T21:33:36+08:00</published><updated>2018-07-09T21:33:36+08:00</updated><author><name>Walter Hu</name></author><id>tag:pingbook.top,2018-07-09:/articles/pi-svn/</id><summary type="html">&lt;h2&gt;&lt;span class="caps"&gt;SVN&lt;/span&gt;&amp;nbsp;安装&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;执行如下命令进行安装:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get -y install subversion&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;启动 &lt;code&gt;svn&lt;/code&gt; 服务: &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;d代表的是daemon 进程&lt;/span&gt;
&lt;span class="code-line"&gt;$ svnserve -d&lt;/span&gt;
&lt;span class="code-line"&gt;$ ps aux | grep svnserve&lt;/span&gt;
&lt;span class="code-line"&gt;若出现如下内容：&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;wkr 6537 0.0 0.0 13784 956 ? Ss 16:18 0:00 svnserve -d&lt;/span&gt;
&lt;span class="code-line"&gt;wkr 7593 0.0 0.0 5784 864 pts/0 S+ 21:57 0:00 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;&lt;span class="caps"&gt;SVN&lt;/span&gt;&amp;nbsp;安装&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;执行如下命令进行安装:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get -y install subversion&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;启动 &lt;code&gt;svn&lt;/code&gt; 服务: &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;d代表的是daemon 进程&lt;/span&gt;
&lt;span class="code-line"&gt;$ svnserve -d&lt;/span&gt;
&lt;span class="code-line"&gt;$ ps aux | grep svnserve&lt;/span&gt;
&lt;span class="code-line"&gt;若出现如下内容：&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;wkr 6537 0.0 0.0 13784 956 ? Ss 16:18 0:00 svnserve -d&lt;/span&gt;
&lt;span class="code-line"&gt;wkr 7593 0.0 0.0 5784 864 pts/0 S+ 21:57 0:00 grep –color=auto svnserve&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;表示服务已开启。（注意：一定要有第1行，只有第2行说明服务未启动）&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;关闭&lt;code&gt;svn&lt;/code&gt;服务:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$  killall svnserve&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;重启 &lt;code&gt;svn&lt;/code&gt;服务:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ svnserve -d -r /srv&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;新建一个仓库:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo adduser --system --home /srv/svn --disabled-password --disabled-login --group svn&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo svnadmin create /srv/svn&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo chown -R svn:svn /srv/svn&lt;/span&gt;
&lt;span class="code-line"&gt;change user, change group 改变文件对应的用户和用户组&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;修改仓库配置文件&lt;br&gt;
编辑配置文件:&amp;nbsp;svnserve.conf&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo nano /srv/svn/conf/svnserve.conf&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;general&lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;anon-access &lt;span class="o"&gt;=&lt;/span&gt; none&lt;/span&gt;
&lt;span class="code-line"&gt;auth-access &lt;span class="o"&gt;=&lt;/span&gt; write&lt;/span&gt;
&lt;span class="code-line"&gt;authz-db &lt;span class="o"&gt;=&lt;/span&gt; authz&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改帐户文件&lt;code&gt;nano /srv/svn/conf/passwd&lt;/code&gt; 和 &lt;code&gt;sudo nano /srv/svn/conf/authz&lt;/code&gt;,&amp;nbsp;此处忽略.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;配置svn开机自动启动&lt;/li&gt;
&lt;li&gt;新建一个svnserve配置文件在&lt;code&gt;/et/default/svnserve&lt;/code&gt;文件,内容如下:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;# svnserve options&lt;/span&gt;
&lt;span class="code-line"&gt;DAEMON_ARGS=&amp;quot;--daemon --pid-file /run/svnserve/svnserve.pid --root /srv/svn --log-file /var/log/svn/svnserve.log&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;注意&lt;/strong&gt; 新建log文件,这些是&lt;code&gt;/etc/default/svnserve&lt;/code&gt;中的文件的配置涉及的几个文件,如果执行&lt;code&gt;sudo systemctl restart svnserve.service&lt;/code&gt;失败,会自动删除文件夹&lt;code&gt;/run/svnserve&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo mkdir /run/svnserve&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo chown -R svn:svn /run/svnserve/&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo chmod -R &lt;span class="m"&gt;777&lt;/span&gt; /run/svnserve/&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo mkdir /var/log/svn&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo chown -R svn:svn /var/log/svn/&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo chmod -R &lt;span class="m"&gt;777&lt;/span&gt; /var/log/svn/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;新建service启动服务文件&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo nano /etc/systemd/system/svnserve.service&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;Unit&lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Subversion protocol daemon&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;After&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;syslog.target network.target&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;Service&lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;forking&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;RuntimeDirectory&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;svnserve&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;PIDFile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/run/svnserve/svnserve.pid&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;EnvironmentFile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/default/svnserve&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;ExecStart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/bin/svnserve &lt;span class="nv"&gt;$DAEMON_ARGS&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;User&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;svn&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;Group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;svn&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;KillMode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;control-group&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;Restart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;on-failure&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;Install&lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;multi-user.target&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重启机器后出现这个错误:(原因是上面的第一个操作我没有做,就是没有创建一个文件&lt;code&gt;/etc/default/svnserve&lt;/code&gt;,或者其中涉及到的文件&lt;code&gt;/var/log/svn&lt;/code&gt;,&lt;code&gt;/run/svnserve&lt;/code&gt;没有新建,或者没有配置可写权限对于用户&lt;code&gt;svn&lt;/code&gt;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;pingbook&lt;/span&gt;&lt;span class="o"&gt;:~$&lt;/span&gt; &lt;span class="nt"&gt;systemctl&lt;/span&gt; &lt;span class="nt"&gt;status&lt;/span&gt; &lt;span class="nt"&gt;svnserve&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;service&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;●&lt;/span&gt; &lt;span class="nt"&gt;svnserve&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;service&lt;/span&gt; &lt;span class="nt"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;Subversion&lt;/span&gt; &lt;span class="nt"&gt;protocol&lt;/span&gt; &lt;span class="nt"&gt;daemon&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="nt"&gt;Loaded&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;loaded&lt;/span&gt; &lt;span class="o"&gt;(/&lt;/span&gt;&lt;span class="nt"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;systemd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;system&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;svnserve&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;service&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;vendor&lt;/span&gt; &lt;span class="nt"&gt;preset&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="nt"&gt;Active&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;failed&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;resources&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;since&lt;/span&gt; &lt;span class="nt"&gt;Sun&lt;/span&gt; &lt;span class="nt"&gt;2018-07-08&lt;/span&gt; &lt;span class="nt"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;06&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;56&lt;/span&gt; &lt;span class="nt"&gt;CST&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;28s&lt;/span&gt; &lt;span class="nt"&gt;ago&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nt"&gt;7月&lt;/span&gt; &lt;span class="nt"&gt;08&lt;/span&gt; &lt;span class="nt"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;06&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;56&lt;/span&gt; &lt;span class="nt"&gt;pingbook&lt;/span&gt; &lt;span class="nt"&gt;systemd&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;Failed&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;start&lt;/span&gt; &lt;span class="nt"&gt;Subversion&lt;/span&gt; &lt;span class="nt"&gt;protocol&lt;/span&gt; &lt;span class="nt"&gt;daemon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nt"&gt;7月&lt;/span&gt; &lt;span class="nt"&gt;08&lt;/span&gt; &lt;span class="nt"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;06&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;56&lt;/span&gt; &lt;span class="nt"&gt;pingbook&lt;/span&gt; &lt;span class="nt"&gt;systemd&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;svnserve&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;service&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;Unit&lt;/span&gt; &lt;span class="nt"&gt;entered&lt;/span&gt; &lt;span class="nt"&gt;failed&lt;/span&gt; &lt;span class="nt"&gt;state&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nt"&gt;7月&lt;/span&gt; &lt;span class="nt"&gt;08&lt;/span&gt; &lt;span class="nt"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;06&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;56&lt;/span&gt; &lt;span class="nt"&gt;pingbook&lt;/span&gt; &lt;span class="nt"&gt;systemd&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;svnserve&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;service&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;Failed&lt;/span&gt; &lt;span class="nt"&gt;with&lt;/span&gt; &lt;span class="nt"&gt;result&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;resources&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nt"&gt;7月&lt;/span&gt; &lt;span class="nt"&gt;08&lt;/span&gt; &lt;span class="nt"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;06&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;56&lt;/span&gt; &lt;span class="nt"&gt;pingbook&lt;/span&gt; &lt;span class="nt"&gt;systemd&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;svnserve&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;service&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;Service&lt;/span&gt; &lt;span class="nt"&gt;hold-off&lt;/span&gt; &lt;span class="nt"&gt;time&lt;/span&gt; &lt;span class="nt"&gt;over&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;scheduling&lt;/span&gt; &lt;span class="nt"&gt;restart&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nt"&gt;7月&lt;/span&gt; &lt;span class="nt"&gt;08&lt;/span&gt; &lt;span class="nt"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;06&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;56&lt;/span&gt; &lt;span class="nt"&gt;pingbook&lt;/span&gt; &lt;span class="nt"&gt;systemd&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;Stopped&lt;/span&gt; &lt;span class="nt"&gt;Subversion&lt;/span&gt; &lt;span class="nt"&gt;protocol&lt;/span&gt; &lt;span class="nt"&gt;daemon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nt"&gt;7月&lt;/span&gt; &lt;span class="nt"&gt;08&lt;/span&gt; &lt;span class="nt"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;06&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;56&lt;/span&gt; &lt;span class="nt"&gt;pingbook&lt;/span&gt; &lt;span class="nt"&gt;systemd&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;svnserve&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;service&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;Start&lt;/span&gt; &lt;span class="nt"&gt;request&lt;/span&gt; &lt;span class="nt"&gt;repeated&lt;/span&gt; &lt;span class="nt"&gt;too&lt;/span&gt; &lt;span class="nt"&gt;quickly&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nt"&gt;7月&lt;/span&gt; &lt;span class="nt"&gt;08&lt;/span&gt; &lt;span class="nt"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;06&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;56&lt;/span&gt; &lt;span class="nt"&gt;pingbook&lt;/span&gt; &lt;span class="nt"&gt;systemd&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;Failed&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;start&lt;/span&gt; &lt;span class="nt"&gt;Subversion&lt;/span&gt; &lt;span class="nt"&gt;protocol&lt;/span&gt; &lt;span class="nt"&gt;daemon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nt"&gt;7月&lt;/span&gt; &lt;span class="nt"&gt;08&lt;/span&gt; &lt;span class="nt"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;06&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;56&lt;/span&gt; &lt;span class="nt"&gt;pingbook&lt;/span&gt; &lt;span class="nt"&gt;systemd&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;svnserve&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;service&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;Unit&lt;/span&gt; &lt;span class="nt"&gt;entered&lt;/span&gt; &lt;span class="nt"&gt;failed&lt;/span&gt; &lt;span class="nt"&gt;state&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nt"&gt;7月&lt;/span&gt; &lt;span class="nt"&gt;08&lt;/span&gt; &lt;span class="nt"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;06&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;56&lt;/span&gt; &lt;span class="nt"&gt;pingbook&lt;/span&gt; &lt;span class="nt"&gt;systemd&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;svnserve&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;service&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;Failed&lt;/span&gt; &lt;span class="nt"&gt;with&lt;/span&gt; &lt;span class="nt"&gt;result&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;resources&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;checkout一份代码到nginx服务器,保持web同步,注意checkout的目录用户要是svn的用户和组,这样hook才能有权限读写&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo svn co svn://localhost/svn /www/pingbook.top --username &lt;span class="s2"&gt;&amp;quot;hr&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /www/pingbook.top&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo chown -R svn:svn *&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo chown -R svn:svn /www/pingbook.top&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo chmod -R &lt;span class="m"&gt;757&lt;/span&gt; /www/pingbook.top&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo chmod -R &lt;span class="m"&gt;757&lt;/span&gt; /www/pingbook.top/.svn   &lt;span class="c1"&gt;# 配置svn数据仓库 &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo svn cleanup&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果commit的时候发现&lt;code&gt;hook&lt;/code&gt;的&lt;code&gt;post-commit&lt;/code&gt;总是报错: &lt;code&gt;post-commit hook failed (exit code 255) with no output&lt;/code&gt;,需要检查对应的文件的读写权限.
1. 检查对应的&lt;code&gt;post-commit&lt;/code&gt;的用户组是&lt;code&gt;svn&lt;/code&gt;,对应的文件有执行权限: &lt;code&gt;sudo chmod g+e /srv/svn/hook/post-commit&lt;/code&gt;&lt;/p&gt;</content><category term="svn"></category></entry><entry><title>[Linux环境搭建] MYSQL 的安装配置</title><link href="https://pingbook.top/articles/pi-mysql/" rel="alternate"></link><published>2018-07-09T20:27:24+08:00</published><updated>2018-07-09T20:27:24+08:00</updated><author><name>Walter Hu</name></author><id>tag:pingbook.top,2018-07-09:/articles/pi-mysql/</id><summary type="html">&lt;h2&gt;安装&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;执行如下命令进行安装和基本的配置:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get -y install mysql-server&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo mysql_secure_installation&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;第二条命令将会配置mysql的&lt;code&gt;root&lt;/code&gt;密码,删除掉&lt;code&gt;test&lt;/code&gt;数据库,不允许匿名登录等等操作. 按照上面的操作mysql的配置是没有问题的了,但是你会发现,如果你运行如下命令:
&lt;code&gt;mysql -u root -p&lt;/code&gt;, 这里的root不用输入密码,明明上面的已经设置了密码???&lt;br&gt;&amp;nbsp;进行如下的命令进行配置:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo mysql -u root -p &lt;/span&gt;
&lt;span class="code-line"&gt;$ use mysql&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ update user &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;plugin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mysql_native_password&amp;#39;&lt;/span&gt; where &lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ flush privileges&lt;span class="p"&gt;;&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;$ quit&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;root&lt;/code&gt;密码的更改,可以采用下面的操作步骤:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo nano …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;安装&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;执行如下命令进行安装和基本的配置:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get -y install mysql-server&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo mysql_secure_installation&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;第二条命令将会配置mysql的&lt;code&gt;root&lt;/code&gt;密码,删除掉&lt;code&gt;test&lt;/code&gt;数据库,不允许匿名登录等等操作. 按照上面的操作mysql的配置是没有问题的了,但是你会发现,如果你运行如下命令:
&lt;code&gt;mysql -u root -p&lt;/code&gt;, 这里的root不用输入密码,明明上面的已经设置了密码???&lt;br&gt;&amp;nbsp;进行如下的命令进行配置:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo mysql -u root -p &lt;/span&gt;
&lt;span class="code-line"&gt;$ use mysql&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ update user &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;plugin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mysql_native_password&amp;#39;&lt;/span&gt; where &lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ flush privileges&lt;span class="p"&gt;;&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;$ quit&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;root&lt;/code&gt;密码的更改,可以采用下面的操作步骤:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo nano /etc/mysql/mariadb.conf.d/50-server.cnf&lt;/span&gt;
&lt;span class="code-line"&gt;增加一行代码: skip-grant-tables 参见 https://www.jb51.net/article/100925.htm&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo mysql -u root -p &lt;/span&gt;
&lt;span class="code-line"&gt;$ use mysql&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ UPDATE mysql.user SET &lt;span class="nv"&gt;Password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;PASSWORD&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;YanZhi123!@#)0x&amp;amp;*&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; where &lt;span class="nv"&gt;USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ flush privileges&lt;span class="p"&gt;;&lt;/span&gt; &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;增加用户名和授权远程登录:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo nano /etc/mysql/mariadb.conf.d/50-server.cnf&lt;/span&gt;
&lt;span class="code-line"&gt;注释掉 bind-address          &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo mysql -u root -p &lt;/span&gt;
&lt;span class="code-line"&gt;$ use mysql&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ CREATE USER &lt;span class="s1"&gt;&amp;#39;yanzhi&amp;#39;&lt;/span&gt;@&lt;span class="s1"&gt;&amp;#39;%&amp;#39;&lt;/span&gt; IDENTIFIED BY &lt;span class="s1"&gt;&amp;#39;yanzhi123!@#&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ GRANT ALL PRIVILEGES ON *.* TO &lt;span class="s1"&gt;&amp;#39;yanzhi&amp;#39;&lt;/span&gt;@&lt;span class="s1"&gt;&amp;#39;%&amp;#39;&lt;/span&gt; IDENTIFIED BY &lt;span class="s1"&gt;&amp;#39;yanzhi123!@#&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    -- 远程连接权限所有的数据库.&lt;/span&gt;
&lt;span class="code-line"&gt;$ flush privileges&lt;span class="p"&gt;;&lt;/span&gt; &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;创建数据库,支持中文:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;UTF8&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;CREATE&lt;/span&gt; &lt;span class="n"&gt;DATABASE&lt;/span&gt; &lt;span class="n"&gt;test2&lt;/span&gt; &lt;span class="n"&gt;DEFAULT&lt;/span&gt; &lt;span class="n"&gt;CHARACTER&lt;/span&gt; &lt;span class="n"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;utf8&lt;/span&gt; &lt;span class="n"&gt;COLLATE&lt;/span&gt; &lt;span class="n"&gt;utf8_general_ci&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;自动备份数据库,每天备份一次&lt;/li&gt;
&lt;li&gt;新建文件: &lt;code&gt;sudo nano /usr/sbin/mysqlbackup.sh&lt;/code&gt;,内容如下:&lt;/li&gt;
&lt;/ol&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/span&gt;
&lt;span class="code-line"&gt;7&lt;/span&gt;
&lt;span class="code-line"&gt;8&lt;/span&gt;
&lt;span class="code-line"&gt;9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Name:mysql_backup.sh&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# This is a ShellScript For Auto DB Backup and Delete old Backup&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;backupdir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/www/backups&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;date +%Y-%m-%d_%H%M%S&lt;span class="sb"&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;/usr/bin/mysqldump --routines -u&lt;span class="s1"&gt;&amp;#39;test&amp;#39;&lt;/span&gt; -p&lt;span class="s1"&gt;&amp;#39;test!@#&amp;#39;&lt;/span&gt; pingbook &lt;span class="p"&gt;|&lt;/span&gt; gzip &amp;gt; &lt;span class="nv"&gt;$backupdir&lt;/span&gt;/yanzhi&lt;span class="nv"&gt;$time&lt;/span&gt;.sql.gz&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# 删除七天前的备份&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;find &lt;span class="nv"&gt;$backupdir&lt;/span&gt; -name &lt;span class="s2"&gt;&amp;quot;*.sql.gz&amp;quot;&lt;/span&gt; -type f -mtime +7 -exec rm &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\ &lt;/span&gt;&amp;gt; /dev/null &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;添加可执行权限对应sh文件.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo chmod +x /usr/sbin/mysqlbackup.sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;增加定时任务在&lt;code&gt;sudo nano /etc/crontab&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;#创建一个mysql备份的操作&lt;/span&gt;
&lt;span class="code-line"&gt;2 1   * * * root  /usr/sbin/mysqlbackup.sh &amp;gt;&amp;gt; /var/log/crontab/backup.log 2&amp;gt;&amp;amp;1  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;重启&lt;code&gt;crontab&lt;/code&gt;以便生效
&lt;code&gt;sudo systemctl restart cron.service&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="mysql"></category><category term="mysql备份"></category></entry><entry><title>[Linux环境搭建] 如何完整卸载python2/3 在debain上</title><link href="https://pingbook.top/articles/pi-python3/" rel="alternate"></link><published>2018-07-09T20:27:12+08:00</published><updated>2018-07-09T20:27:12+08:00</updated><author><name>Walter Hu</name></author><id>tag:pingbook.top,2018-07-09:/articles/pi-python3/</id><summary type="html">&lt;h2&gt;卸载命令&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get remove &lt;span class="s1"&gt;&amp;#39;python3.*&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;其实这里的python的包是: &lt;span class="sb"&gt;`&lt;/span&gt;python3.5-minimal&lt;span class="sb"&gt;`&lt;/span&gt;,&lt;span class="sb"&gt;`&lt;/span&gt;python3.5-venv&lt;span class="sb"&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;安装最新python3.7&lt;/h2&gt;
&lt;p&gt;因为默认的debian仓库里面是python3.5,所以如果需要安装最新的python,安装如下进行安装,
参考文档: &lt;a href="https://unix.stackexchange.com/questions/332641/how-to-install-python-3-6"&gt;https://unix.stackexchange.com/questions/332641/how-to-install-python-3-6&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;安装依赖包&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev \&lt;/span&gt;
&lt;span class="code-line"&gt;libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \&lt;/span&gt;
&lt;span class="code-line"&gt;xz-utils tk-dev libffi-dev&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo wget https://www.python.org …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;卸载命令&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get remove &lt;span class="s1"&gt;&amp;#39;python3.*&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;其实这里的python的包是: &lt;span class="sb"&gt;`&lt;/span&gt;python3.5-minimal&lt;span class="sb"&gt;`&lt;/span&gt;,&lt;span class="sb"&gt;`&lt;/span&gt;python3.5-venv&lt;span class="sb"&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;安装最新python3.7&lt;/h2&gt;
&lt;p&gt;因为默认的debian仓库里面是python3.5,所以如果需要安装最新的python,安装如下进行安装,
参考文档: &lt;a href="https://unix.stackexchange.com/questions/332641/how-to-install-python-3-6"&gt;https://unix.stackexchange.com/questions/332641/how-to-install-python-3-6&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;安装依赖包&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev \&lt;/span&gt;
&lt;span class="code-line"&gt;libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \&lt;/span&gt;
&lt;span class="code-line"&gt;xz-utils tk-dev libffi-dev&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo wget https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz&lt;/span&gt;
&lt;span class="code-line"&gt;$ tar xvf Python-3.7.0.tgz&lt;/span&gt;
&lt;span class="code-line"&gt;$ ./configure --enable-optimizations --with-ensurepip=install&lt;/span&gt;
&lt;span class="code-line"&gt;$ make -j8&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo make altinstall&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;安装pip,pipenv并设置全局可用命令&lt;code&gt;pipenv&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ wget https://bootstrap.pypa.io/get-pip.py&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo python get-pip.py&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ pip install --user pipenv&lt;/span&gt;
&lt;span class="code-line"&gt; /home/pi/.local/bin&lt;/span&gt;
&lt;span class="code-line"&gt;$ python -m site --user-base&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo nano ~/.profile&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.local/bin:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;$ sudo &lt;span class="nb"&gt;source&lt;/span&gt; ~/.profile&lt;/span&gt;
&lt;span class="code-line"&gt;$ pipenv --update&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="树莓派"></category><category term="python3"></category></entry><entry><title>树莓派外部网站搭建</title><link href="https://pingbook.top/articles/pi-mirrors/" rel="alternate"></link><published>2018-07-08T23:35:08+08:00</published><updated>2018-07-08T23:35:08+08:00</updated><author><name>Walter Hu</name></author><id>tag:pingbook.top,2018-07-08:/articles/pi-mirrors/</id><summary type="html">&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;前因&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;自己在Github&amp;nbsp;Page搭建了一个博客,但是不能被百度收录.也就是百度搜索不能爬取网站的内容,也就不能被国内搜索到了.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;整理一下树莓派下安装nginx的过程&lt;/h2&gt;
&lt;h3&gt;1. 为树莓派更换国内镜像源 -(2018-07-07更新: 清华的镜像源已经不能使用: Cannot initiate the connection to&amp;nbsp;mirrors.tuna.tsinghua.edu.cn:80)&lt;/h3&gt;
&lt;p&gt;可用的官方镜像源: http://www.raspbian.org/RaspbianMirrors&lt;br&gt;&amp;nbsp;使用管理员权限（经由sudo），编辑/etc/apt/sources.list文件。参考命令行为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo nano /etc/apt/sources.list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;用#注释掉原文件内容，用以下内容取代使用上海大学或者是中科大(https://mirrors.ustc.edu.cn …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;前因&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;自己在Github&amp;nbsp;Page搭建了一个博客,但是不能被百度收录.也就是百度搜索不能爬取网站的内容,也就不能被国内搜索到了.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;整理一下树莓派下安装nginx的过程&lt;/h2&gt;
&lt;h3&gt;1. 为树莓派更换国内镜像源 -(2018-07-07更新: 清华的镜像源已经不能使用: Cannot initiate the connection to&amp;nbsp;mirrors.tuna.tsinghua.edu.cn:80)&lt;/h3&gt;
&lt;p&gt;可用的官方镜像源: http://www.raspbian.org/RaspbianMirrors&lt;br&gt;&amp;nbsp;使用管理员权限（经由sudo），编辑/etc/apt/sources.list文件。参考命令行为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo nano /etc/apt/sources.list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;用#注释掉原文件内容，用以下内容取代使用上海大学或者是中科大(https://mirrors.ustc.edu.cn/archive.raspberrypi.org/)的镜像：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;https://mirrors.shu.edu.cn/raspbian/raspbian/&lt;/span&gt; &lt;span class="kp"&gt;stretch&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt; &lt;span class="kp"&gt;contrib&lt;/span&gt; &lt;span class="kp"&gt;non-free&lt;/span&gt; &lt;span class="kp"&gt;rpi&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;deb-src&lt;/span&gt; &lt;span class="s"&gt;https://mirrors.shu.edu.cn/raspbian/raspbian/&lt;/span&gt; &lt;span class="kp"&gt;stretch&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt; &lt;span class="kp"&gt;contrib&lt;/span&gt; &lt;span class="kp"&gt;non-free&lt;/span&gt; &lt;span class="kp"&gt;rpi&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用管理员权限（经由sudo），编辑/etc/apt/sources.list.d/raspi.list文件。参考命令行为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;$ sudo nano /etc/apt/sources.list.d/raspi.list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;用#注释掉原文件内容，用以下内容取代：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;https://mirrors.ustc.edu.cn/archive.raspberrypi.org/&lt;/span&gt; &lt;span class="kp"&gt;stretch&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt; &lt;span class="kp"&gt;ui&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;deb-src&lt;/span&gt; &lt;span class="s"&gt;https://mirrors.ustc.edu.cn/archive.raspberrypi.org/&lt;/span&gt; &lt;span class="kp"&gt;stretch&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt; &lt;span class="kp"&gt;ui&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;注意： 网址末尾的raspbian重复两次是必须的。因为Raspbian的仓库中除了APT软件源还包含其他代码。APT软件源不在仓库的根目录，而在raspbian/子目录下。&lt;br&gt;
编辑镜像站后，请使用&lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y&lt;/code&gt;命令，更新软件源列表，同时检查您的编辑是否正确。
使用HTTPS可以有效避免国内运营商的缓存劫持，但需要事先安装&lt;code&gt;apt-transport-https&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;树莓派安装&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;因为感觉空间越来越小了,不能使用现在的需要了,所以决定重新安装系统.
1. 下载镜像
2. 新建一个空文件没有后缀名: ssh, 然后放到 /boot 文件夹里面.&amp;nbsp;这两个文件在启动的时候会自动复制到指定的目录里面.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;2.&amp;nbsp;删除已经安装的nginx&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;# sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y  # update all package index&lt;/span&gt;
&lt;span class="code-line"&gt;# sudo apt-get purge nginx nginx-common # Removes everything.&lt;/span&gt;
&lt;span class="code-line"&gt;nginx 采用的C语言编写的,需要对应的C编译器(GCC):&lt;/span&gt;
&lt;span class="code-line"&gt;# sudo apt install build-essential -y&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;3.&amp;nbsp;安装远程桌面,不使用VNC操作&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install xrdp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="树莓派"></category><category term="nat123"></category><category term="树莓派镜像"></category></entry></feed>