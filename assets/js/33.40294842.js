(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{287:function(a,e,t){"use strict";t.r(e);var s=t(9),r=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"capacitor搭建及其踩坑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#capacitor搭建及其踩坑"}},[a._v("#")]),a._v(" capacitor搭建及其踩坑")]),a._v(" "),t("ol",[t("li",[a._v("在"),t("code",[a._v("package.json")]),a._v("中加入以下四个必须的依赖，我就是因为稍加了一个"),t("code",[a._v("@capacitor/cli")]),a._v("导致"),t("code",[a._v("app")]),a._v("模块中的"),t("code",[a._v("compileSdkVersion")]),a._v("是27，而其他的模块更新的确实28，注意！！！ 如下配置:")])]),a._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"@capacitor/android"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"^1.0.0"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"@capacitor/core"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"^1.0.0"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"@capacitor/cli"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"^1.0.0"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"@capacitor/ios"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"^1.0.0"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[a._v("配置相应的gradle环境，例如环境变量GRADlE_HOME,GRADLE_USER_HOME，配置idea中的"),t("code",[a._v("service directory path")]),a._v("为自定义的gradle路径，配置"),t("code",[a._v("capacitor root path/android/app/gradle/wrapper/gradle-wrapper.properties")]),a._v(",设置里面的"),t("code",[a._v("distributionUrl=https\\://services.gradle.org/distributions/gradle-5.4.1-all.zip")]),a._v(" 为自己的设置的目录。")])]),a._v(" "),t("li",[t("p",[a._v("直接编译报错"),t("code",[a._v("point to the same directory in the file system.Each module must have a unique path.")]),a._v(" ，解决方法: 将项目android文件下的    ***.iml 文件删掉，重新导入编译即可")])]),a._v(" "),t("li",[t("p",[a._v("android sdk这里我们使用的"),t("code",[a._v("@capacitor/core")]),a._v("=1.0.0， 所以它支持的Androidsdk是28，所以我们记得配置Androidstudio 中sdk只有一个API 28版本的。")])]),a._v(" "),t("li",[t("p",[t("code",[a._v("npx cap sync")]),a._v("是用户安装了新的cordova插件后更新同步新的插件到工程里面。而"),t("code",[a._v("npx cap copy")]),a._v("主要就是每次的web工程build后将对应的dist目录复制到对应的assets目录下面。")])]),a._v(" "),t("li",[t("p",[t("code",[a._v("Android 9.0 WebView无法加载页面报错net：ERR_CLEARTEXT_NOT_PERMITTED")]),a._v(",从Android 9.0（API级别28）开始，默认情况下禁用明文支持。因此http的url均无法在webview中加载。")])])]),a._v(" "),t("blockquote",[t("p",[a._v("在"),t("code",[a._v("AndroidManifest.xml")]),a._v("文件中的"),t("code",[a._v("application")]),a._v("标签添加"),t("code",[a._v('android:usesCleartextTraffic="true"')])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<?xml version="1.0" encoding="utf-8"?>\n<manifest ...>\n    <uses-permission android:name="android.permission.INTERNET" />\n    <application\n        ...\n        android:usesCleartextTraffic="true"\n        ...>\n        ...\n    </application>\n</manifest>\n\n')])])]),t("ol",{attrs:{start:"7"}},[t("li",[t("p",[a._v("ionic 切换页面时会添加"),t("code",[a._v("ion-page-invisible")]),a._v(",导致页面白屏,参考问题：")])]),a._v(" "),t("li",[t("p",[a._v("vue阻止冒泡到父级节点的事件 "),t("code",[a._v("@click.stop")]),a._v("：")])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('            <div v-for="(image,index) in currentImages"\n                 :key="image.src"  @click="previewImage(image, index)">\n              <li class="weui-uploader__file"\n                  :style="{ backgroundImage: `url(${image.src})`}"\n                 >\n                <ion-icon name="ios-close-circle" class="weui-close-icon" @click.stop="removeImage(image, index)"></ion-icon>\n              </li>\n            </div>\n')])])]),t("ol",{attrs:{start:"9"}},[t("li",[t("p",[a._v("cordova phone call打电话代码: "),t("code",[a._v("location.href='tel:13052113519'")]),a._v("或者 "),t("code",[a._v("window.open('tel:13052113519')")])])]),a._v(" "),t("li",[t("p",[a._v("离线存储解决方案: "),t("code",[a._v("localForage")])])]),a._v(" "),t("li",[t("p",[t("code",[a._v("promise")]),a._v(", "),t("code",[a._v("async")]),a._v("和"),t("code",[a._v("await")]),a._v("的讲解")])])]),a._v(" "),t("p",[a._v("参考： https://www.cnblogs.com/CandyManPing/p/9384104.html")]),a._v(" "),t("ol",[t("li",[a._v("async 告诉程序这是一个异步，awiat 会暂停执行async中的代码，等待await 表达式后面的结果，跳过async 函数，继续执行后面代码")]),a._v(" "),t("li",[a._v("async 函数会返回一个Promise 对象，那么当 async 函数返回一个值时，Promise 的 resolve 方法会负责传递这个值；当 async 函数抛出异常时，Promise 的 reject 方法也会传递这个异常值")]),a._v(" "),t("li",[a._v("await  操作符用于等待一个Promise 对象，并且返回 Promise 对象的处理结果（成功把resolve 函数参数作为await 表达式的值），如果等待的不是 Promise 对象，则用 Promise.resolve(xx) 转化")])]),a._v(" "),t("h3",{attrs:{id:"例子参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#例子参考"}},[a._v("#")]),a._v(" 例子参考")]),a._v(" "),t("ol",[t("li",[a._v("https://github.com/nklayman/vue-cli-plugin-capacitor/blob/master/index.js")]),a._v(" "),t("li",[a._v("https://github.com/pietrovieira/Vuejs-Ionic4-Ionic-Capacitor/blob/master/src/App.vue")]),a._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/aaronksaunders/icon-vue/blob/master/src/components/Login.vue",target:"_blank",rel:"noopener noreferrer"}},[a._v("sample app using capacitor vuejs and ionicv4 components"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Balintataw/restaurant-mobile-app",target:"_blank",rel:"noopener noreferrer"}},[a._v("Mobile app built with Vue.js, Ionic 4(beta), and wrapped by Capacitor"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=r.exports}}]);