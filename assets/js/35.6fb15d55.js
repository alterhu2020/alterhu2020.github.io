(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{295:function(e,t,s){"use strict";s.r(t);var a=s(6),n=Object(a.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"zookeeper-和dubbo整合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper-和dubbo整合","aria-hidden":"true"}},[e._v("#")]),e._v(" zookeeper 和dubbo整合")]),e._v(" "),s("h3",{attrs:{id:"zookeeper-单机安装配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper-单机安装配置","aria-hidden":"true"}},[e._v("#")]),e._v(" zookeeper 单机安装配置")]),e._v(" "),s("blockquote",[s("p",[e._v("参考文章: https://blog.csdn.net/pucao_cug/article/details/71240246")])]),e._v(" "),s("ul",[s("li",[e._v("下载安装，解压缩tar.gz到目录： "),s("code",[e._v("/opt/apache-zookeeper-3.5.5")])]),e._v(" "),s("li",[e._v("进入"),s("code",[e._v("cnf")]),e._v("目录复制一份配置文件： "),s("code",[e._v("sudo cp zoo_sample.cfg zoo.cfg")])]),e._v(" "),s("li",[e._v("创建日志目录： "),s("code",[e._v("sudo mkdir /logs/zookeeper && chmod 777 -R /logs")])]),e._v(" "),s("li",[e._v("修改"),s("code",[e._v("zoo.cfg")]),e._v("配置信息：")])]),e._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of milliseconds of each tick")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 它用来控制心跳和超时，默认情况下最小的会话超时时间为两倍的 tickTime ，就是minSessionTimeout=")]),e._v("\ntickTime"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2000")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of ticks that the initial ")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# synchronization phase can take")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 集群配置，此配置表示，允许 follower （相对于 leader 而言的“客户端”）连接并同步到 leader 的初始化连接时间，它以 tickTime 的倍数来表示。当超过设置倍数的 tickTime 时间，则连接失败。")]),e._v("\ninitLimit"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of ticks that can pass between ")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# sending a request and getting an acknowledgement")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 集群配置，此配置表示， leader 与 follower 之间发送消息，请求和应答时间长度。如果 follower 在设置的时间内不能与leader 进行通信，那么此 follower 将被丢弃。")]),e._v("\nsyncLimit"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the directory where the snapshot is stored.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# do not use /tmp for storage, /tmp here is just ")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# example sakes.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 存储内存中数据库快照的位置")]),e._v("\ndataDir"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("opt"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("apache"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("zookeeper"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("3.5")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v(".5")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("data\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 这个操作将管理机器把事务日志写入到“ dataLogDir ”所指定的目录，而不是“ dataDir ”所指定的目录。这将允许使用一个专用的日志设备并且帮助我们避免日志和快照之间的竞争")]),e._v("\ndataLogDir"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("logs"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("zookeeper\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the port at which the clients will connect")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 客户端连接的端口")]),e._v("\nclientPort"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2181")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the maximum number of client connections.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# increase this if you need to handle more clients")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 这个操作将限制连接到 ZooKeeper 的客户端的数量，限制并发连接的数量，它通过 IP 来区分不同的客户端。此配置选项可以用来阻止某些类别的 Dos 攻击。将它设置为 0 或者忽略而不进行设置将会取消对并发连接的限制。")]),e._v("\nmaxClientCnxns"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("60")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Be sure to read the maintenance section of the ")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# administrator guide before turning on autopurge.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of snapshots to retain in dataDir")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#autopurge.snapRetainCount=3")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Purge task interval in hours")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# Set to "0" to disable auto purge feature')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#autopurge.purgeInterval=1")]),e._v("\n\n")])])]),s("p",[e._v("-- 配置环境变量："),s("code",[e._v("sudo nano /etc/profile")]),e._v(":")]),e._v(" "),s("blockquote",[s("p",[e._v("配置环境变量的目的是为了直接只用zookeeper中bin目录下的命令，如果不配置zookeeper的home路径，并不影响zookeeper启动")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("export ZOOKEEPER_HOME=/opt/apache-zookeeper-3.5.5\nexport PATH=$ZOOKEEPER_HOME/bin:$PATH\n")])])]),s("p",[e._v("-- 启动服务"),s("code",[e._v("/opt/apache-zookeeper-3.5.5/bin/zkServer.sh start")]),e._v("\n-- 查看服务是否启动: "),s("code",[e._v("/opt/apache-zookeeper-3.5.5/bin/zkServer.sh status")])]),e._v(" "),s("p",[e._v("-- 启动开机自启动: "),s("code",[e._v("sudo nano /usr/lib/systemd/system/zookeeper.service")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("[Unit]\nDescription=zookeeper\nAfter=network.target remote-fs.target nss-lookup.target\n[Service]\nType=forking\nExecStart=/opt/apache-zookeeper-3.5.5/bin/zkServer.sh start\nExecReload=/opt/apache-zookeeper-3.5.5/bin/zkServer.sh restart\nExecStop=/opt/apache-zookeeper-3.5.5/bin/zkServer.sh stop\n[Install]\nWantedBy=multi-user.target\n\n")])])]),s("h3",{attrs:{id:"zookeeper启动问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper启动问题","aria-hidden":"true"}},[e._v("#")]),e._v(" zookeeper启动问题")]),e._v(" "),s("p",[e._v("执行"),s("code",[e._v("/zkServer.sh start")]),e._v("，看到启动正常，但是执行"),s("code",[e._v("zkServer.sh status")]),e._v("确报： "),s("code",[e._v("Error contacting service. It is probably not running")]),e._v(".这说明并没有启动成功.我们可以通过bin目录下面的"),s("code",[e._v("zookeeper.out")]),e._v("来查看问题原因")])])},[],!1,null,null,null);t.default=n.exports}}]);