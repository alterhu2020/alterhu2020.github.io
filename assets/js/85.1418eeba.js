(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{502:function(t,s,a){"use strict";a.r(s);var e=a(10),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("ClientOnly",[a("in-article-adsense",{attrs:{"ins-style":"display:block; text-align:center;","data-ad-slot":"7727965566"}})],1),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#docker安装配置"}},[t._v("Docker安装配置")]),a("ul",[a("li",[a("a",{attrs:{href:"#方法一-推荐"}},[t._v("方法一（推荐）")])]),a("li",[a("a",{attrs:{href:"#方法二"}},[t._v("方法二")])])])]),a("li",[a("a",{attrs:{href:"#_1-nginx部署"}},[t._v("1. nginx部署")])]),a("li",[a("a",{attrs:{href:"#_2-jenkins部署"}},[t._v("2. jenkins部署")])]),a("li",[a("a",{attrs:{href:"#_3-java应用程序部署"}},[t._v("3. java应用程序部署")])]),a("li",[a("a",{attrs:{href:"#_4-python应用程序部署"}},[t._v("4. python应用程序部署")])]),a("li",[a("a",{attrs:{href:"#_5-vue应用程序部署"}},[t._v("5. vue应用程序部署")])]),a("li",[a("a",{attrs:{href:"#_6-selenium测试环境部署"}},[t._v("6. selenium测试环境部署")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"docker安装配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker安装配置"}},[t._v("#")]),t._v(" Docker安装配置")]),t._v(" "),a("p",[t._v("从现在开始所有的部署相关的都docker化，不再使用以前的人工部署方式。")]),t._v(" "),a("p",[t._v("那么如何安装docker呢？")]),t._v(" "),a("h3",{attrs:{id:"方法一-推荐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法一-推荐"}},[t._v("#")]),t._v(" 方法一（推荐）")]),t._v(" "),a("p",[t._v("参考链接： "),a("a",{attrs:{href:"https://www.digitalocean.com/community/tutorials/how-to-run-nginx-in-a-docker-container-on-ubuntu-14-04",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.digitalocean.com/community/tutorials/how-to-run-nginx-in-a-docker-container-on-ubuntu-14-04"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("只需要执行一个命令即可：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -sSL https://get.docker.com/ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v("\n")])])]),a("h3",{attrs:{id:"方法二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法二"}},[t._v("#")]),t._v(" 方法二")]),t._v(" "),a("p",[t._v("服务器端采用的是debian系统，安装如下步骤：\n"),a("a",{attrs:{href:"https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-debian-10",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-debian-10"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" update\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" apt-transport-https ca-certificates "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" gnupg2 software-properties-common\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fsSL https://download.docker.com/linux/debian/gpg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" apt-key "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" add-apt-repository "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deb [arch=amd64] https://download.docker.com/linux/debian '),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("lsb_release -cs"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(' stable"')]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" update\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-cache")]),t._v(" policy docker-ce\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" docker-ce\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl status docker\n$ docker info\n")])])]),a("p",[t._v("通过上面的"),a("code",[t._v("docker info")]),t._v("发现对应的"),a("code",[t._v("Registry Mirrors")]),t._v("是官方的镜像，所以我们在使用"),a("code",[t._v("docker pull")]),t._v("命令下载到本地的时候会比较缓慢，所以我们需要修改对应的镜像。修改命令如下：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nano")]),t._v(" /etc/docker/daemon.json\n")])])]),a("p",[t._v("修改为如下：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"registry-mirrors"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://jbj2tyqj.mirror.aliyuncs.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("-----------------------------------------"),a("strong",[t._v("分割线")]),t._v("---------------------------------------------------")]),t._v(" "),a("p",[t._v("docker默认只提供本地unix，sock文件的连接方式，让docker能够监听tcp端口还需要进行一些配置。\n1.1 首先编辑docker的宿主机文件: "),a("code",[t._v("nano /lib/systemd/system/docker.service")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# #ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ExecStart")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/bin/dockerd -H unix:///var/run/docker.sock -H tcp://0.0.0.0:2375\n")])])]),a("p",[t._v("保存配置。")]),t._v(" "),a("p",[t._v("1.2 重新加载系统服务配置文件（包含刚刚修改的文件）")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("systemctl daemon-reload\n")])])]),a("p",[t._v("重启docker服务")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("systemctl restart docker\n")])])]),a("p",[t._v("1.3 防火墙添加开放2375端口")]),t._v(" "),a("p",[t._v("1.4 在Windows系统上测试端口是否可以使用:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" http://localhost:2375/version\n")])])]),a("h2",{attrs:{id:"_1-nginx部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-nginx部署"}},[t._v("#")]),t._v(" 1. nginx部署")]),t._v(" "),a("p",[a("strong",[t._v("注意：推荐nginx不用docker部署，直接采用宿主机器安装。以下的安装方式不推荐")])]),t._v(" "),a("p",[t._v("参考安装步骤链接： "),a("a",{attrs:{href:"https://www.digitalocean.com/community/tutorials/how-to-run-nginx-in-a-docker-container-on-ubuntu-14-04",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.digitalocean.com/community/tutorials/how-to-run-nginx-in-a-docker-container-on-ubuntu-14-04"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("执行如下命令：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" docker pull nginx\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p ~/opt/html\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /opt/html\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" docker run -d -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(":80 -v /etc/nginx:/etc/nginx -v /opt/html:/usr/share/nginx/html --name nginx nginx\n\n")])])]),a("h2",{attrs:{id:"_2-jenkins部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-jenkins部署"}},[t._v("#")]),t._v(" 2. jenkins部署")]),t._v(" "),a("p",[t._v("参考文档： "),a("a",{attrs:{href:"https://developpaper.com/docker-installs-the-latest-version-of-jenkins/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://developpaper.com/docker-installs-the-latest-version-of-jenkins/"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("命令如下：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ docker pull jenkins/jenkins:lts\n$ docker images   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看对应的下载的jenkins镜像的jenkins版本")]),t._v("\n$ docker inspect "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("jenkins image id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/alterhu2020/StorageHub/master/img/20210305170845.png",alt:"20210305170845"}})]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Create data mount directory")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /opt/jenkins_home\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#The data directory is authorized. Otherwise, an error is reported. There is no such file directory")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("777")]),t._v(" /opt/jenkins_home/\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" docker run -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8888")]),t._v(":8080 -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50000")]),t._v(":50000 --privileged"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true  -v /opt/jenkins_home:/var/jenkins_home --name jenkins  jenkins/jenkins:lts\n")])])]),a("p",[t._v("检查是否jenkins正常启动：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#View containers all containers")]),t._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -a\n​\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#View running containers")]),t._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v("\n\n")])])]),a("p",[t._v("输入对应的ip地址和端口号即可访问对应的jenkins服务了，需要输入对应的初始化的管理员密码，密码是在容器里面的，使用下面的命令得到初始化的密码，或者直接在宿主机器加载的目录："),a("code",[t._v("/opt/jenkins_home/")]),t._v("获取对应的信息：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#[image ID] the image ID of the container")]),t._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("IMAGE ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n​\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Get the password by command")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /var/jenkins_home/secrets/initialAdminPassword\n")])])]),a("p",[t._v("安装完毕。")]),t._v(" "),a("p",[t._v("其他配置和插件安装参考：")]),t._v(" "),a("h2",{attrs:{id:"_3-java应用程序部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-java应用程序部署"}},[t._v("#")]),t._v(" 3. java应用程序部署")]),t._v(" "),a("p",[t._v("此处推荐的几个基础jdk镜像：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# jdk11")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker pull adoptopenjdk/openjdk11:jdk-11.0.10_9-debianslim")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker pull adoptopenjdk/openjdk11:jdk-11.0.10_9-debianslim-slim")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# jdk15")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker pull adoptopenjdk/openjdk15:jdk-15.0.2_7-debianslim")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker pull adoptopenjdk/openjdk15:jdk-15.0.2_7-debianslim-slim")]),t._v("\n\n")])])]),a("p",[t._v("推荐一个博客介绍的几种docker镜像大小的对比，"),a("a",{attrs:{href:"https://technology.amis.nl/continuous-delivery/containers/the-size-of-docker-images-containing-openjdk-11-0-6/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://technology.amis.nl/continuous-delivery/containers/the-size-of-docker-images-containing-openjdk-11-0-6/"),a("OutboundLink")],1),t._v("\n如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/alterhu2020/StorageHub/master/img/20210305092831.png",alt:"docker"}})]),t._v(" "),a("p",[t._v("3.1 配置springboot的一个安装包的"),a("code",[t._v("Dockerfile")]),t._v("脚本：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("\n")])])]),a("h2",{attrs:{id:"_4-python应用程序部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-python应用程序部署"}},[t._v("#")]),t._v(" 4. python应用程序部署")]),t._v(" "),a("h2",{attrs:{id:"_5-vue应用程序部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-vue应用程序部署"}},[t._v("#")]),t._v(" 5. vue应用程序部署")]),t._v(" "),a("h2",{attrs:{id:"_6-selenium测试环境部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-selenium测试环境部署"}},[t._v("#")]),t._v(" 6. selenium测试环境部署")])],1)}),[],!1,null,null,null);s.default=n.exports}}]);